// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v5.26.1
// source: hermes_types.proto

package proto

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Message Types and Enums
type MessageType int32

const (
	MessageType_MESSAGE_TYPE_UNSPECIFIED       MessageType = 0
	MessageType_MESSAGE_TYPE_SNAP_API_PROXY    MessageType = 4
	MessageType_MESSAGE_TYPE_ERROR             MessageType = 5
	MessageType_MESSAGE_TYPE_PINGPONG          MessageType = 7
	MessageType_MESSAGE_TYPE_SNAP_EVENT        MessageType = 8
	MessageType_MESSAGE_TYPE_PRESENCE          MessageType = 9
	MessageType_MESSAGE_TYPE_USER_NOTIFICATION MessageType = 10
)

// Enum value maps for MessageType.
var (
	MessageType_name = map[int32]string{
		0:  "MESSAGE_TYPE_UNSPECIFIED",
		4:  "MESSAGE_TYPE_SNAP_API_PROXY",
		5:  "MESSAGE_TYPE_ERROR",
		7:  "MESSAGE_TYPE_PINGPONG",
		8:  "MESSAGE_TYPE_SNAP_EVENT",
		9:  "MESSAGE_TYPE_PRESENCE",
		10: "MESSAGE_TYPE_USER_NOTIFICATION",
	}
	MessageType_value = map[string]int32{
		"MESSAGE_TYPE_UNSPECIFIED":       0,
		"MESSAGE_TYPE_SNAP_API_PROXY":    4,
		"MESSAGE_TYPE_ERROR":             5,
		"MESSAGE_TYPE_PINGPONG":          7,
		"MESSAGE_TYPE_SNAP_EVENT":        8,
		"MESSAGE_TYPE_PRESENCE":          9,
		"MESSAGE_TYPE_USER_NOTIFICATION": 10,
	}
)

func (x MessageType) Enum() *MessageType {
	p := new(MessageType)
	*p = x
	return p
}

func (x MessageType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MessageType) Descriptor() protoreflect.EnumDescriptor {
	return file_hermes_types_proto_enumTypes[0].Descriptor()
}

func (MessageType) Type() protoreflect.EnumType {
	return &file_hermes_types_proto_enumTypes[0]
}

func (x MessageType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MessageType.Descriptor instead.
func (MessageType) EnumDescriptor() ([]byte, []int) {
	return file_hermes_types_proto_rawDescGZIP(), []int{0}
}

type ErrorCode int32

const (
	ErrorCode_ErrorCode_OK                ErrorCode = 0
	ErrorCode_ErrorCode_INTERNAL          ErrorCode = 1
	ErrorCode_ErrorCode_INVALID_ARGUMENT  ErrorCode = 2
	ErrorCode_ErrorCode_NOT_FOUND         ErrorCode = 3
	ErrorCode_ErrorCode_ALREADY_EXISTS    ErrorCode = 4
	ErrorCode_ErrorCode_BUFFER_FULL       ErrorCode = 5
	ErrorCode_ErrorCode_PERMISSION_DENIED ErrorCode = 6
)

// Enum value maps for ErrorCode.
var (
	ErrorCode_name = map[int32]string{
		0: "ErrorCode_OK",
		1: "ErrorCode_INTERNAL",
		2: "ErrorCode_INVALID_ARGUMENT",
		3: "ErrorCode_NOT_FOUND",
		4: "ErrorCode_ALREADY_EXISTS",
		5: "ErrorCode_BUFFER_FULL",
		6: "ErrorCode_PERMISSION_DENIED",
	}
	ErrorCode_value = map[string]int32{
		"ErrorCode_OK":                0,
		"ErrorCode_INTERNAL":          1,
		"ErrorCode_INVALID_ARGUMENT":  2,
		"ErrorCode_NOT_FOUND":         3,
		"ErrorCode_ALREADY_EXISTS":    4,
		"ErrorCode_BUFFER_FULL":       5,
		"ErrorCode_PERMISSION_DENIED": 6,
	}
)

func (x ErrorCode) Enum() *ErrorCode {
	p := new(ErrorCode)
	*p = x
	return p
}

func (x ErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_hermes_types_proto_enumTypes[1].Descriptor()
}

func (ErrorCode) Type() protoreflect.EnumType {
	return &file_hermes_types_proto_enumTypes[1]
}

func (x ErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ErrorCode.Descriptor instead.
func (ErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_hermes_types_proto_rawDescGZIP(), []int{1}
}

// Service Events & Pub/Sub
type HermesEventType int32

const (
	HermesEventType_UNKNOWN_EVENT_TYPE HermesEventType = 0
	// This is 100 because it was moved from snapser_event.proto which had it at 100, so... just being safe
	HermesEventType_HERMES_SESSION_DISCONNECTED HermesEventType = 100
	HermesEventType_HERMES_USER_NOTIFICATION    HermesEventType = 101
)

// Enum value maps for HermesEventType.
var (
	HermesEventType_name = map[int32]string{
		0:   "UNKNOWN_EVENT_TYPE",
		100: "HERMES_SESSION_DISCONNECTED",
		101: "HERMES_USER_NOTIFICATION",
	}
	HermesEventType_value = map[string]int32{
		"UNKNOWN_EVENT_TYPE":          0,
		"HERMES_SESSION_DISCONNECTED": 100,
		"HERMES_USER_NOTIFICATION":    101,
	}
)

func (x HermesEventType) Enum() *HermesEventType {
	p := new(HermesEventType)
	*p = x
	return p
}

func (x HermesEventType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HermesEventType) Descriptor() protoreflect.EnumDescriptor {
	return file_hermes_types_proto_enumTypes[2].Descriptor()
}

func (HermesEventType) Type() protoreflect.EnumType {
	return &file_hermes_types_proto_enumTypes[2]
}

func (x HermesEventType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use HermesEventType.Descriptor instead.
func (HermesEventType) EnumDescriptor() ([]byte, []int) {
	return file_hermes_types_proto_rawDescGZIP(), []int{2}
}

// Incoming message wrapper
type ClientMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// message id.  ServerMessage will use this id in the response
	Mid string `protobuf:"bytes,1,opt,name=mid,proto3" json:"mid,omitempty"`
	// allows the server to easily route the message to the correct subsystem
	MessageType MessageType `protobuf:"varint,2,opt,name=message_type,json=messageType,proto3,enum=hermes.MessageType" json:"message_type,omitempty"`
	// client time when the message was sent
	Timestamp int64 `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// list of recipients.  If empty, the message is broadcast to all clients
	Recipients []string `protobuf:"bytes,4,rep,name=recipients,proto3" json:"recipients,omitempty"`
	// incoming payload
	//
	// Types that are assignable to Message:
	//
	//	*ClientMessage_Ping
	//	*ClientMessage_SnapApiRequest
	//	*ClientMessage_PresenceRequest
	Message isClientMessage_Message `protobuf_oneof:"message"`
}

func (x *ClientMessage) Reset() {
	*x = ClientMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hermes_types_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientMessage) ProtoMessage() {}

func (x *ClientMessage) ProtoReflect() protoreflect.Message {
	mi := &file_hermes_types_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientMessage.ProtoReflect.Descriptor instead.
func (*ClientMessage) Descriptor() ([]byte, []int) {
	return file_hermes_types_proto_rawDescGZIP(), []int{0}
}

func (x *ClientMessage) GetMid() string {
	if x != nil {
		return x.Mid
	}
	return ""
}

func (x *ClientMessage) GetMessageType() MessageType {
	if x != nil {
		return x.MessageType
	}
	return MessageType_MESSAGE_TYPE_UNSPECIFIED
}

func (x *ClientMessage) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *ClientMessage) GetRecipients() []string {
	if x != nil {
		return x.Recipients
	}
	return nil
}

func (m *ClientMessage) GetMessage() isClientMessage_Message {
	if m != nil {
		return m.Message
	}
	return nil
}

func (x *ClientMessage) GetPing() *Message_Ping {
	if x, ok := x.GetMessage().(*ClientMessage_Ping); ok {
		return x.Ping
	}
	return nil
}

func (x *ClientMessage) GetSnapApiRequest() *Message_SnapApiRequest {
	if x, ok := x.GetMessage().(*ClientMessage_SnapApiRequest); ok {
		return x.SnapApiRequest
	}
	return nil
}

func (x *ClientMessage) GetPresenceRequest() *Message_PresenceRequest {
	if x, ok := x.GetMessage().(*ClientMessage_PresenceRequest); ok {
		return x.PresenceRequest
	}
	return nil
}

type isClientMessage_Message interface {
	isClientMessage_Message()
}

type ClientMessage_Ping struct {
	Ping *Message_Ping `protobuf:"bytes,10,opt,name=ping,proto3,oneof"`
}

type ClientMessage_SnapApiRequest struct {
	SnapApiRequest *Message_SnapApiRequest `protobuf:"bytes,50,opt,name=snap_api_request,json=snapApiRequest,proto3,oneof"`
}

type ClientMessage_PresenceRequest struct {
	PresenceRequest *Message_PresenceRequest `protobuf:"bytes,80,opt,name=presence_request,json=presenceRequest,proto3,oneof"`
}

func (*ClientMessage_Ping) isClientMessage_Message() {}

func (*ClientMessage_SnapApiRequest) isClientMessage_Message() {}

func (*ClientMessage_PresenceRequest) isClientMessage_Message() {}

// Outgoing message wrapper
type ServerMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// message id from ClientMessage
	Mid string `protobuf:"bytes,1,opt,name=mid,proto3" json:"mid,omitempty"`
	// allows the client to easily route the message to the correct subsystem
	MessageType MessageType `protobuf:"varint,2,opt,name=message_type,json=messageType,proto3,enum=hermes.MessageType" json:"message_type,omitempty"`
	// server time when the message was sent
	Timestamp int64 `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// list of recipients.  If empty, the message is broadcast to all clients
	Recipients []string `protobuf:"bytes,4,rep,name=recipients,proto3" json:"recipients,omitempty"`
	// if this message was built in response to a ClientMessage, this is the sender.
	// Useful for relay when we may not want to broadcast
	Sender string `protobuf:"bytes,5,opt,name=sender,proto3" json:"sender,omitempty"`
	// outgoing payload
	//
	// Types that are assignable to Message:
	//
	//	*ServerMessage_Pong
	//	*ServerMessage_Error
	//	*ServerMessage_ApiResponse
	//	*ServerMessage_SnapEvent
	//	*ServerMessage_PresenceResponse
	//	*ServerMessage_UserNotification
	Message isServerMessage_Message `protobuf_oneof:"message"`
}

func (x *ServerMessage) Reset() {
	*x = ServerMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hermes_types_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerMessage) ProtoMessage() {}

func (x *ServerMessage) ProtoReflect() protoreflect.Message {
	mi := &file_hermes_types_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerMessage.ProtoReflect.Descriptor instead.
func (*ServerMessage) Descriptor() ([]byte, []int) {
	return file_hermes_types_proto_rawDescGZIP(), []int{1}
}

func (x *ServerMessage) GetMid() string {
	if x != nil {
		return x.Mid
	}
	return ""
}

func (x *ServerMessage) GetMessageType() MessageType {
	if x != nil {
		return x.MessageType
	}
	return MessageType_MESSAGE_TYPE_UNSPECIFIED
}

func (x *ServerMessage) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *ServerMessage) GetRecipients() []string {
	if x != nil {
		return x.Recipients
	}
	return nil
}

func (x *ServerMessage) GetSender() string {
	if x != nil {
		return x.Sender
	}
	return ""
}

func (m *ServerMessage) GetMessage() isServerMessage_Message {
	if m != nil {
		return m.Message
	}
	return nil
}

func (x *ServerMessage) GetPong() *Message_Pong {
	if x, ok := x.GetMessage().(*ServerMessage_Pong); ok {
		return x.Pong
	}
	return nil
}

func (x *ServerMessage) GetError() *Message_Error {
	if x, ok := x.GetMessage().(*ServerMessage_Error); ok {
		return x.Error
	}
	return nil
}

func (x *ServerMessage) GetApiResponse() *Message_SnapApiResponse {
	if x, ok := x.GetMessage().(*ServerMessage_ApiResponse); ok {
		return x.ApiResponse
	}
	return nil
}

func (x *ServerMessage) GetSnapEvent() *Message_SnapEvent {
	if x, ok := x.GetMessage().(*ServerMessage_SnapEvent); ok {
		return x.SnapEvent
	}
	return nil
}

func (x *ServerMessage) GetPresenceResponse() *Message_PresenceResponse {
	if x, ok := x.GetMessage().(*ServerMessage_PresenceResponse); ok {
		return x.PresenceResponse
	}
	return nil
}

func (x *ServerMessage) GetUserNotification() *Message_UserNotification {
	if x, ok := x.GetMessage().(*ServerMessage_UserNotification); ok {
		return x.UserNotification
	}
	return nil
}

type isServerMessage_Message interface {
	isServerMessage_Message()
}

type ServerMessage_Pong struct {
	Pong *Message_Pong `protobuf:"bytes,10,opt,name=pong,proto3,oneof"`
}

type ServerMessage_Error struct {
	Error *Message_Error `protobuf:"bytes,11,opt,name=error,proto3,oneof"`
}

type ServerMessage_ApiResponse struct {
	ApiResponse *Message_SnapApiResponse `protobuf:"bytes,50,opt,name=api_response,json=apiResponse,proto3,oneof"`
}

type ServerMessage_SnapEvent struct {
	SnapEvent *Message_SnapEvent `protobuf:"bytes,60,opt,name=snap_event,json=snapEvent,proto3,oneof"`
}

type ServerMessage_PresenceResponse struct {
	PresenceResponse *Message_PresenceResponse `protobuf:"bytes,80,opt,name=presence_response,json=presenceResponse,proto3,oneof"`
}

type ServerMessage_UserNotification struct {
	UserNotification *Message_UserNotification `protobuf:"bytes,90,opt,name=user_notification,json=userNotification,proto3,oneof"`
}

func (*ServerMessage_Pong) isServerMessage_Message() {}

func (*ServerMessage_Error) isServerMessage_Message() {}

func (*ServerMessage_ApiResponse) isServerMessage_Message() {}

func (*ServerMessage_SnapEvent) isServerMessage_Message() {}

func (*ServerMessage_PresenceResponse) isServerMessage_Message() {}

func (*ServerMessage_UserNotification) isServerMessage_Message() {}

type Message_Ping struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Message_Ping) Reset() {
	*x = Message_Ping{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hermes_types_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_Ping) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_Ping) ProtoMessage() {}

func (x *Message_Ping) ProtoReflect() protoreflect.Message {
	mi := &file_hermes_types_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_Ping.ProtoReflect.Descriptor instead.
func (*Message_Ping) Descriptor() ([]byte, []int) {
	return file_hermes_types_proto_rawDescGZIP(), []int{2}
}

type Message_Pong struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Message_Pong) Reset() {
	*x = Message_Pong{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hermes_types_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_Pong) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_Pong) ProtoMessage() {}

func (x *Message_Pong) ProtoReflect() protoreflect.Message {
	mi := &file_hermes_types_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_Pong.ProtoReflect.Descriptor instead.
func (*Message_Pong) Descriptor() ([]byte, []int) {
	return file_hermes_types_proto_rawDescGZIP(), []int{3}
}

type Message_SnapEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Deprecated: Marked as deprecated in hermes_types.proto.
	EventId     uint32 `protobuf:"varint,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	ServiceName string `protobuf:"bytes,2,opt,name=service_name,json=serviceName,proto3" json:"service_name,omitempty"`
	Payload     []byte `protobuf:"bytes,3,opt,name=payload,proto3" json:"payload,omitempty"`
	// Subject that the event was published with. Sometimes referred to as a channel.
	Subject string `protobuf:"bytes,4,opt,name=subject,proto3" json:"subject,omitempty"`
	// A unique identifier for the event type
	EventTypeId uint32 `protobuf:"varint,5,opt,name=event_type_id,json=eventTypeId,proto3" json:"event_type_id,omitempty"`
}

func (x *Message_SnapEvent) Reset() {
	*x = Message_SnapEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hermes_types_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_SnapEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_SnapEvent) ProtoMessage() {}

func (x *Message_SnapEvent) ProtoReflect() protoreflect.Message {
	mi := &file_hermes_types_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_SnapEvent.ProtoReflect.Descriptor instead.
func (*Message_SnapEvent) Descriptor() ([]byte, []int) {
	return file_hermes_types_proto_rawDescGZIP(), []int{4}
}

// Deprecated: Marked as deprecated in hermes_types.proto.
func (x *Message_SnapEvent) GetEventId() uint32 {
	if x != nil {
		return x.EventId
	}
	return 0
}

func (x *Message_SnapEvent) GetServiceName() string {
	if x != nil {
		return x.ServiceName
	}
	return ""
}

func (x *Message_SnapEvent) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *Message_SnapEvent) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *Message_SnapEvent) GetEventTypeId() uint32 {
	if x != nil {
		return x.EventTypeId
	}
	return 0
}

type Message_Error struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    ErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=hermes.ErrorCode" json:"code,omitempty"`
	Message string    `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *Message_Error) Reset() {
	*x = Message_Error{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hermes_types_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_Error) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_Error) ProtoMessage() {}

func (x *Message_Error) ProtoReflect() protoreflect.Message {
	mi := &file_hermes_types_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_Error.ProtoReflect.Descriptor instead.
func (*Message_Error) Descriptor() ([]byte, []int) {
	return file_hermes_types_proto_rawDescGZIP(), []int{5}
}

func (x *Message_Error) GetCode() ErrorCode {
	if x != nil {
		return x.Code
	}
	return ErrorCode_ErrorCode_OK
}

func (x *Message_Error) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type Message_SnapApiRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Method  string `protobuf:"bytes,1,opt,name=method,proto3" json:"method,omitempty"`
	Payload []byte `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *Message_SnapApiRequest) Reset() {
	*x = Message_SnapApiRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hermes_types_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_SnapApiRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_SnapApiRequest) ProtoMessage() {}

func (x *Message_SnapApiRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hermes_types_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_SnapApiRequest.ProtoReflect.Descriptor instead.
func (*Message_SnapApiRequest) Descriptor() ([]byte, []int) {
	return file_hermes_types_proto_rawDescGZIP(), []int{6}
}

func (x *Message_SnapApiRequest) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *Message_SnapApiRequest) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

type Message_SnapApiResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CallerMethod string        `protobuf:"bytes,1,opt,name=caller_method,json=callerMethod,proto3" json:"caller_method,omitempty"`
	CallerTime   int64         `protobuf:"varint,2,opt,name=caller_time,json=callerTime,proto3" json:"caller_time,omitempty"`
	Payload      []byte        `protobuf:"bytes,3,opt,name=payload,proto3" json:"payload,omitempty"`
	IsError      bool          `protobuf:"varint,4,opt,name=is_error,json=isError,proto3" json:"is_error,omitempty"`
	Error        *SnapApiError `protobuf:"bytes,5,opt,name=error,proto3,oneof" json:"error,omitempty"`
}

func (x *Message_SnapApiResponse) Reset() {
	*x = Message_SnapApiResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hermes_types_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_SnapApiResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_SnapApiResponse) ProtoMessage() {}

func (x *Message_SnapApiResponse) ProtoReflect() protoreflect.Message {
	mi := &file_hermes_types_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_SnapApiResponse.ProtoReflect.Descriptor instead.
func (*Message_SnapApiResponse) Descriptor() ([]byte, []int) {
	return file_hermes_types_proto_rawDescGZIP(), []int{7}
}

func (x *Message_SnapApiResponse) GetCallerMethod() string {
	if x != nil {
		return x.CallerMethod
	}
	return ""
}

func (x *Message_SnapApiResponse) GetCallerTime() int64 {
	if x != nil {
		return x.CallerTime
	}
	return 0
}

func (x *Message_SnapApiResponse) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *Message_SnapApiResponse) GetIsError() bool {
	if x != nil {
		return x.IsError
	}
	return false
}

func (x *Message_SnapApiResponse) GetError() *SnapApiError {
	if x != nil {
		return x.Error
	}
	return nil
}

type Message_PresenceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Message_PresenceRequest) Reset() {
	*x = Message_PresenceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hermes_types_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_PresenceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_PresenceRequest) ProtoMessage() {}

func (x *Message_PresenceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hermes_types_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_PresenceRequest.ProtoReflect.Descriptor instead.
func (*Message_PresenceRequest) Descriptor() ([]byte, []int) {
	return file_hermes_types_proto_rawDescGZIP(), []int{8}
}

type Message_PresenceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalPresenceCount int32           `protobuf:"varint,1,opt,name=total_presence_count,json=totalPresenceCount,proto3" json:"total_presence_count,omitempty"`
	NodePresences      []*NodePresence `protobuf:"bytes,2,rep,name=node_presences,json=nodePresences,proto3" json:"node_presences,omitempty"`
}

func (x *Message_PresenceResponse) Reset() {
	*x = Message_PresenceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hermes_types_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_PresenceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_PresenceResponse) ProtoMessage() {}

func (x *Message_PresenceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_hermes_types_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_PresenceResponse.ProtoReflect.Descriptor instead.
func (*Message_PresenceResponse) Descriptor() ([]byte, []int) {
	return file_hermes_types_proto_rawDescGZIP(), []int{9}
}

func (x *Message_PresenceResponse) GetTotalPresenceCount() int32 {
	if x != nil {
		return x.TotalPresenceCount
	}
	return 0
}

func (x *Message_PresenceResponse) GetNodePresences() []*NodePresence {
	if x != nil {
		return x.NodePresences
	}
	return nil
}

type Message_UserNotification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data map[string]string `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Message_UserNotification) Reset() {
	*x = Message_UserNotification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hermes_types_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_UserNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_UserNotification) ProtoMessage() {}

func (x *Message_UserNotification) ProtoReflect() protoreflect.Message {
	mi := &file_hermes_types_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_UserNotification.ProtoReflect.Descriptor instead.
func (*Message_UserNotification) Descriptor() ([]byte, []int) {
	return file_hermes_types_proto_rawDescGZIP(), []int{10}
}

func (x *Message_UserNotification) GetData() map[string]string {
	if x != nil {
		return x.Data
	}
	return nil
}

type NodePresence struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeId          string `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	PresenceCount   int32  `protobuf:"varint,2,opt,name=presence_count,json=presenceCount,proto3" json:"presence_count,omitempty"`
	LastSeenAt      int64  `protobuf:"varint,3,opt,name=last_seen_at,json=lastSeenAt,proto3" json:"last_seen_at,omitempty"`
	UptimeInSeconds int64  `protobuf:"varint,4,opt,name=uptime_in_seconds,json=uptimeInSeconds,proto3" json:"uptime_in_seconds,omitempty"`
}

func (x *NodePresence) Reset() {
	*x = NodePresence{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hermes_types_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodePresence) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodePresence) ProtoMessage() {}

func (x *NodePresence) ProtoReflect() protoreflect.Message {
	mi := &file_hermes_types_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodePresence.ProtoReflect.Descriptor instead.
func (*NodePresence) Descriptor() ([]byte, []int) {
	return file_hermes_types_proto_rawDescGZIP(), []int{11}
}

func (x *NodePresence) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *NodePresence) GetPresenceCount() int32 {
	if x != nil {
		return x.PresenceCount
	}
	return 0
}

func (x *NodePresence) GetLastSeenAt() int64 {
	if x != nil {
		return x.LastSeenAt
	}
	return 0
}

func (x *NodePresence) GetUptimeInSeconds() int64 {
	if x != nil {
		return x.UptimeInSeconds
	}
	return 0
}

type SnapApiError struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Details []string `protobuf:"bytes,3,rep,name=details,proto3" json:"details,omitempty"`
}

func (x *SnapApiError) Reset() {
	*x = SnapApiError{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hermes_types_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SnapApiError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SnapApiError) ProtoMessage() {}

func (x *SnapApiError) ProtoReflect() protoreflect.Message {
	mi := &file_hermes_types_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SnapApiError.ProtoReflect.Descriptor instead.
func (*SnapApiError) Descriptor() ([]byte, []int) {
	return file_hermes_types_proto_rawDescGZIP(), []int{12}
}

func (x *SnapApiError) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *SnapApiError) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *SnapApiError) GetDetails() []string {
	if x != nil {
		return x.Details
	}
	return nil
}

type NotifyUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserIds []string          `protobuf:"bytes,1,rep,name=user_ids,json=userIds,proto3" json:"user_ids,omitempty"`
	Data    map[string]string `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *NotifyUserRequest) Reset() {
	*x = NotifyUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hermes_types_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyUserRequest) ProtoMessage() {}

func (x *NotifyUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hermes_types_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyUserRequest.ProtoReflect.Descriptor instead.
func (*NotifyUserRequest) Descriptor() ([]byte, []int) {
	return file_hermes_types_proto_rawDescGZIP(), []int{13}
}

func (x *NotifyUserRequest) GetUserIds() []string {
	if x != nil {
		return x.UserIds
	}
	return nil
}

func (x *NotifyUserRequest) GetData() map[string]string {
	if x != nil {
		return x.Data
	}
	return nil
}

type NotifyUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *NotifyUserResponse) Reset() {
	*x = NotifyUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hermes_types_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyUserResponse) ProtoMessage() {}

func (x *NotifyUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_hermes_types_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyUserResponse.ProtoReflect.Descriptor instead.
func (*NotifyUserResponse) Descriptor() ([]byte, []int) {
	return file_hermes_types_proto_rawDescGZIP(), []int{14}
}

func (x *NotifyUserResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type EventSessionDisconnected struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventType      HermesEventType `protobuf:"varint,5,opt,name=event_type,json=eventType,proto3,enum=hermes.HermesEventType" json:"event_type,omitempty"`
	UserId         string          `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	SessionId      string          `protobuf:"bytes,2,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	Reason         string          `protobuf:"bytes,3,opt,name=reason,proto3" json:"reason,omitempty"`
	DisconnectedAt int64           `protobuf:"varint,4,opt,name=disconnected_at,json=disconnectedAt,proto3" json:"disconnected_at,omitempty"`
}

func (x *EventSessionDisconnected) Reset() {
	*x = EventSessionDisconnected{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hermes_types_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventSessionDisconnected) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventSessionDisconnected) ProtoMessage() {}

func (x *EventSessionDisconnected) ProtoReflect() protoreflect.Message {
	mi := &file_hermes_types_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventSessionDisconnected.ProtoReflect.Descriptor instead.
func (*EventSessionDisconnected) Descriptor() ([]byte, []int) {
	return file_hermes_types_proto_rawDescGZIP(), []int{15}
}

func (x *EventSessionDisconnected) GetEventType() HermesEventType {
	if x != nil {
		return x.EventType
	}
	return HermesEventType_UNKNOWN_EVENT_TYPE
}

func (x *EventSessionDisconnected) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *EventSessionDisconnected) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *EventSessionDisconnected) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *EventSessionDisconnected) GetDisconnectedAt() int64 {
	if x != nil {
		return x.DisconnectedAt
	}
	return 0
}

var File_hermes_types_proto protoreflect.FileDescriptor

var file_hermes_types_proto_rawDesc = []byte{
	0x0a, 0x12, 0x68, 0x65, 0x72, 0x6d, 0x65, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x68, 0x65, 0x72, 0x6d, 0x65, 0x73, 0x1a, 0x17, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65,
	0x6e, 0x2d, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x32, 0x2f, 0x6f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xe8, 0x02, 0x0a, 0x0d, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x69, 0x64, 0x12, 0x36, 0x0a, 0x0c, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x13, 0x2e, 0x68, 0x65, 0x72, 0x6d, 0x65, 0x73, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12,
	0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x12,
	0x2a, 0x0a, 0x04, 0x70, 0x69, 0x6e, 0x67, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x68, 0x65, 0x72, 0x6d, 0x65, 0x73, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x50,
	0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x04, 0x70, 0x69, 0x6e, 0x67, 0x12, 0x4a, 0x0a, 0x10, 0x73,
	0x6e, 0x61, 0x70, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18,
	0x32, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x68, 0x65, 0x72, 0x6d, 0x65, 0x73, 0x2e, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x53, 0x6e, 0x61, 0x70, 0x41, 0x70, 0x69, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0e, 0x73, 0x6e, 0x61, 0x70, 0x41, 0x70, 0x69,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4c, 0x0a, 0x10, 0x70, 0x72, 0x65, 0x73, 0x65,
	0x6e, 0x63, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x50, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1f, 0x2e, 0x68, 0x65, 0x72, 0x6d, 0x65, 0x73, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x5f, 0x50, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x48, 0x00, 0x52, 0x0f, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x09, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x22, 0xb9, 0x04, 0x0a, 0x0d, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6d, 0x69, 0x64, 0x12, 0x36, 0x0a, 0x0c, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x68, 0x65, 0x72,
	0x6d, 0x65, 0x73, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65,
	0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a,
	0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x12, 0x2a, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x68, 0x65, 0x72, 0x6d, 0x65, 0x73, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x5f, 0x50, 0x6f, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x12, 0x2d,
	0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x68, 0x65, 0x72, 0x6d, 0x65, 0x73, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x44, 0x0a,
	0x0c, 0x61, 0x70, 0x69, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x32, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x68, 0x65, 0x72, 0x6d, 0x65, 0x73, 0x2e, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x5f, 0x53, 0x6e, 0x61, 0x70, 0x41, 0x70, 0x69, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x0b, 0x61, 0x70, 0x69, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x0a, 0x73, 0x6e, 0x61, 0x70, 0x5f, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x68, 0x65, 0x72, 0x6d, 0x65, 0x73,
	0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x53, 0x6e, 0x61, 0x70, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x48, 0x00, 0x52, 0x09, 0x73, 0x6e, 0x61, 0x70, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12,
	0x4f, 0x0a, 0x11, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x18, 0x50, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x68, 0x65, 0x72,
	0x6d, 0x65, 0x73, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x50, 0x72, 0x65, 0x73,
	0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x10,
	0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x4f, 0x0a, 0x11, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x5a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x68, 0x65,
	0x72, 0x6d, 0x65, 0x73, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x55, 0x73, 0x65,
	0x72, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52,
	0x10, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x42, 0x09, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x0e, 0x0a, 0x0c,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x50, 0x69, 0x6e, 0x67, 0x22, 0x0e, 0x0a, 0x0c,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x50, 0x6f, 0x6e, 0x67, 0x22, 0xad, 0x01, 0x0a,
	0x11, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x53, 0x6e, 0x61, 0x70, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x08, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x42, 0x02, 0x18, 0x01, 0x52, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49,
	0x64, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x22, 0x0a, 0x0d, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0b, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x22, 0x50, 0x0a, 0x0d,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x25, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x68, 0x65,
	0x72, 0x6d, 0x65, 0x73, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x4a,
	0x0a, 0x16, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x53, 0x6e, 0x61, 0x70, 0x41, 0x70,
	0x69, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68,
	0x6f, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0xcf, 0x01, 0x0a, 0x17, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x53, 0x6e, 0x61, 0x70, 0x41, 0x70, 0x69, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72,
	0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63,
	0x61, 0x6c, 0x6c, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63,
	0x61, 0x6c, 0x6c, 0x65, 0x72, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x70,
	0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x12, 0x2f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x68, 0x65, 0x72, 0x6d, 0x65, 0x73, 0x2e, 0x53, 0x6e, 0x61, 0x70, 0x41, 0x70,
	0x69, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x88,
	0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x19, 0x0a, 0x17,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x50, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x63, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x89, 0x01, 0x0a, 0x18, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x5f, 0x50, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x70, 0x72,
	0x65, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x12, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x63,
	0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x3b, 0x0a, 0x0e, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x70,
	0x72, 0x65, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x68, 0x65, 0x72, 0x6d, 0x65, 0x73, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x50, 0x72, 0x65, 0x73,
	0x65, 0x6e, 0x63, 0x65, 0x52, 0x0d, 0x6e, 0x6f, 0x64, 0x65, 0x50, 0x72, 0x65, 0x73, 0x65, 0x6e,
	0x63, 0x65, 0x73, 0x22, 0x93, 0x01, 0x0a, 0x18, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f,
	0x55, 0x73, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x3e, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a,
	0x2e, 0x68, 0x65, 0x72, 0x6d, 0x65, 0x73, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f,
	0x55, 0x73, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x1a, 0x37, 0x0a, 0x09, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x9c, 0x01, 0x0a, 0x0c, 0x4e, 0x6f,
	0x64, 0x65, 0x50, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x6f,
	0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x6f, 0x64,
	0x65, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x5f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x70, 0x72, 0x65,
	0x73, 0x65, 0x6e, 0x63, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0c, 0x6c, 0x61,
	0x73, 0x74, 0x5f, 0x73, 0x65, 0x65, 0x6e, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x6c, 0x61, 0x73, 0x74, 0x53, 0x65, 0x65, 0x6e, 0x41, 0x74, 0x12, 0x2a, 0x0a, 0x11,
	0x75, 0x70, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x75, 0x70, 0x74, 0x69, 0x6d, 0x65, 0x49,
	0x6e, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x22, 0x56, 0x0a, 0x0c, 0x53, 0x6e, 0x61, 0x70,
	0x41, 0x70, 0x69, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x22, 0x8b, 0x02, 0x0a, 0x11, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x61, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x42, 0x46, 0x92, 0x41, 0x20, 0x32, 0x1a, 0x4c,
	0x69, 0x73, 0x74, 0x20, 0x6f, 0x66, 0x20, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x73, 0x20,
	0x74, 0x6f, 0x20, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x9a, 0x02, 0x01, 0x07, 0xfa, 0x42, 0x20,
	0x92, 0x01, 0x1d, 0x08, 0x01, 0x22, 0x19, 0x72, 0x17, 0x10, 0x01, 0x18, 0x32, 0x32, 0x11, 0x28,
	0x3f, 0x69, 0x29, 0x5e, 0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x2d, 0x5f, 0x5d, 0x2a, 0x24,
	0x52, 0x07, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x73, 0x12, 0x5a, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x68, 0x65, 0x72, 0x6d, 0x65, 0x73,
	0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x42, 0x21, 0x92, 0x41,
	0x1e, 0x32, 0x18, 0x44, 0x61, 0x74, 0x61, 0x20, 0x74, 0x6f, 0x20, 0x73, 0x65, 0x6e, 0x64, 0x20,
	0x74, 0x6f, 0x20, 0x74, 0x68, 0x65, 0x20, 0x75, 0x73, 0x65, 0x72, 0x9a, 0x02, 0x01, 0x06, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x37, 0x0a, 0x09, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x2e,
	0x0a, 0x12, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0xcb,
	0x01, 0x0a, 0x18, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x44,
	0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x12, 0x36, 0x0a, 0x0a, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x17, 0x2e, 0x68, 0x65, 0x72, 0x6d, 0x65, 0x73, 0x2e, 0x48, 0x65, 0x72, 0x6d, 0x65, 0x73, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a,
	0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x12, 0x27, 0x0a, 0x0f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x64, 0x69,
	0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x41, 0x74, 0x2a, 0xdb, 0x01, 0x0a,
	0x0b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x18,
	0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53,
	0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1f, 0x0a, 0x1b, 0x4d, 0x45,
	0x53, 0x53, 0x41, 0x47, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x53, 0x4e, 0x41, 0x50, 0x5f,
	0x41, 0x50, 0x49, 0x5f, 0x50, 0x52, 0x4f, 0x58, 0x59, 0x10, 0x04, 0x12, 0x16, 0x0a, 0x12, 0x4d,
	0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x45, 0x52, 0x52, 0x4f,
	0x52, 0x10, 0x05, 0x12, 0x19, 0x0a, 0x15, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x50, 0x49, 0x4e, 0x47, 0x50, 0x4f, 0x4e, 0x47, 0x10, 0x07, 0x12, 0x1b,
	0x0a, 0x17, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x53,
	0x4e, 0x41, 0x50, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x10, 0x08, 0x12, 0x19, 0x0a, 0x15, 0x4d,
	0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x50, 0x52, 0x45, 0x53,
	0x45, 0x4e, 0x43, 0x45, 0x10, 0x09, 0x12, 0x22, 0x0a, 0x1e, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47,
	0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x4e, 0x4f, 0x54, 0x49,
	0x46, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x0a, 0x2a, 0xc8, 0x01, 0x0a, 0x09, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x0c, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x43, 0x6f, 0x64, 0x65, 0x5f, 0x4f, 0x4b, 0x10, 0x00, 0x12, 0x16, 0x0a, 0x12, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x5f, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x4e, 0x41, 0x4c,
	0x10, 0x01, 0x12, 0x1e, 0x0a, 0x1a, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x5f,
	0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x41, 0x52, 0x47, 0x55, 0x4d, 0x45, 0x4e, 0x54,
	0x10, 0x02, 0x12, 0x17, 0x0a, 0x13, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x5f,
	0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x03, 0x12, 0x1c, 0x0a, 0x18, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x5f, 0x41, 0x4c, 0x52, 0x45, 0x41, 0x44, 0x59,
	0x5f, 0x45, 0x58, 0x49, 0x53, 0x54, 0x53, 0x10, 0x04, 0x12, 0x19, 0x0a, 0x15, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x5f, 0x42, 0x55, 0x46, 0x46, 0x45, 0x52, 0x5f, 0x46, 0x55,
	0x4c, 0x4c, 0x10, 0x05, 0x12, 0x1f, 0x0a, 0x1b, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64,
	0x65, 0x5f, 0x50, 0x45, 0x52, 0x4d, 0x49, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x44, 0x45, 0x4e,
	0x49, 0x45, 0x44, 0x10, 0x06, 0x2a, 0x68, 0x0a, 0x0f, 0x48, 0x65, 0x72, 0x6d, 0x65, 0x73, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x12, 0x55, 0x4e, 0x4b, 0x4e,
	0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x10, 0x00,
	0x12, 0x1f, 0x0a, 0x1b, 0x48, 0x45, 0x52, 0x4d, 0x45, 0x53, 0x5f, 0x53, 0x45, 0x53, 0x53, 0x49,
	0x4f, 0x4e, 0x5f, 0x44, 0x49, 0x53, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x45, 0x44, 0x10,
	0x64, 0x12, 0x1c, 0x0a, 0x18, 0x48, 0x45, 0x52, 0x4d, 0x45, 0x53, 0x5f, 0x55, 0x53, 0x45, 0x52,
	0x5f, 0x4e, 0x4f, 0x54, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x65, 0x42,
	0x31, 0x5a, 0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x6e,
	0x61, 0x70, 0x73, 0x65, 0x72, 0x2d, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x68, 0x65, 0x72, 0x6d, 0x65, 0x73, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_hermes_types_proto_rawDescOnce sync.Once
	file_hermes_types_proto_rawDescData = file_hermes_types_proto_rawDesc
)

func file_hermes_types_proto_rawDescGZIP() []byte {
	file_hermes_types_proto_rawDescOnce.Do(func() {
		file_hermes_types_proto_rawDescData = protoimpl.X.CompressGZIP(file_hermes_types_proto_rawDescData)
	})
	return file_hermes_types_proto_rawDescData
}

var file_hermes_types_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_hermes_types_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_hermes_types_proto_goTypes = []interface{}{
	(MessageType)(0),                 // 0: hermes.MessageType
	(ErrorCode)(0),                   // 1: hermes.ErrorCode
	(HermesEventType)(0),             // 2: hermes.HermesEventType
	(*ClientMessage)(nil),            // 3: hermes.ClientMessage
	(*ServerMessage)(nil),            // 4: hermes.ServerMessage
	(*Message_Ping)(nil),             // 5: hermes.Message_Ping
	(*Message_Pong)(nil),             // 6: hermes.Message_Pong
	(*Message_SnapEvent)(nil),        // 7: hermes.Message_SnapEvent
	(*Message_Error)(nil),            // 8: hermes.Message_Error
	(*Message_SnapApiRequest)(nil),   // 9: hermes.Message_SnapApiRequest
	(*Message_SnapApiResponse)(nil),  // 10: hermes.Message_SnapApiResponse
	(*Message_PresenceRequest)(nil),  // 11: hermes.Message_PresenceRequest
	(*Message_PresenceResponse)(nil), // 12: hermes.Message_PresenceResponse
	(*Message_UserNotification)(nil), // 13: hermes.Message_UserNotification
	(*NodePresence)(nil),             // 14: hermes.NodePresence
	(*SnapApiError)(nil),             // 15: hermes.SnapApiError
	(*NotifyUserRequest)(nil),        // 16: hermes.NotifyUserRequest
	(*NotifyUserResponse)(nil),       // 17: hermes.NotifyUserResponse
	(*EventSessionDisconnected)(nil), // 18: hermes.EventSessionDisconnected
	nil,                              // 19: hermes.Message_UserNotification.DataEntry
	nil,                              // 20: hermes.NotifyUserRequest.DataEntry
}
var file_hermes_types_proto_depIdxs = []int32{
	0,  // 0: hermes.ClientMessage.message_type:type_name -> hermes.MessageType
	5,  // 1: hermes.ClientMessage.ping:type_name -> hermes.Message_Ping
	9,  // 2: hermes.ClientMessage.snap_api_request:type_name -> hermes.Message_SnapApiRequest
	11, // 3: hermes.ClientMessage.presence_request:type_name -> hermes.Message_PresenceRequest
	0,  // 4: hermes.ServerMessage.message_type:type_name -> hermes.MessageType
	6,  // 5: hermes.ServerMessage.pong:type_name -> hermes.Message_Pong
	8,  // 6: hermes.ServerMessage.error:type_name -> hermes.Message_Error
	10, // 7: hermes.ServerMessage.api_response:type_name -> hermes.Message_SnapApiResponse
	7,  // 8: hermes.ServerMessage.snap_event:type_name -> hermes.Message_SnapEvent
	12, // 9: hermes.ServerMessage.presence_response:type_name -> hermes.Message_PresenceResponse
	13, // 10: hermes.ServerMessage.user_notification:type_name -> hermes.Message_UserNotification
	1,  // 11: hermes.Message_Error.code:type_name -> hermes.ErrorCode
	15, // 12: hermes.Message_SnapApiResponse.error:type_name -> hermes.SnapApiError
	14, // 13: hermes.Message_PresenceResponse.node_presences:type_name -> hermes.NodePresence
	19, // 14: hermes.Message_UserNotification.data:type_name -> hermes.Message_UserNotification.DataEntry
	20, // 15: hermes.NotifyUserRequest.data:type_name -> hermes.NotifyUserRequest.DataEntry
	2,  // 16: hermes.EventSessionDisconnected.event_type:type_name -> hermes.HermesEventType
	17, // [17:17] is the sub-list for method output_type
	17, // [17:17] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_hermes_types_proto_init() }
func file_hermes_types_proto_init() {
	if File_hermes_types_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_hermes_types_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hermes_types_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hermes_types_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_Ping); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hermes_types_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_Pong); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hermes_types_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_SnapEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hermes_types_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_Error); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hermes_types_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_SnapApiRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hermes_types_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_SnapApiResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hermes_types_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_PresenceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hermes_types_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_PresenceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hermes_types_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_UserNotification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hermes_types_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodePresence); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hermes_types_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SnapApiError); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hermes_types_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hermes_types_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hermes_types_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventSessionDisconnected); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_hermes_types_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*ClientMessage_Ping)(nil),
		(*ClientMessage_SnapApiRequest)(nil),
		(*ClientMessage_PresenceRequest)(nil),
	}
	file_hermes_types_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*ServerMessage_Pong)(nil),
		(*ServerMessage_Error)(nil),
		(*ServerMessage_ApiResponse)(nil),
		(*ServerMessage_SnapEvent)(nil),
		(*ServerMessage_PresenceResponse)(nil),
		(*ServerMessage_UserNotification)(nil),
	}
	file_hermes_types_proto_msgTypes[7].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_hermes_types_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_hermes_types_proto_goTypes,
		DependencyIndexes: file_hermes_types_proto_depIdxs,
		EnumInfos:         file_hermes_types_proto_enumTypes,
		MessageInfos:      file_hermes_types_proto_msgTypes,
	}.Build()
	File_hermes_types_proto = out.File
	file_hermes_types_proto_rawDesc = nil
	file_hermes_types_proto_goTypes = nil
	file_hermes_types_proto_depIdxs = nil
}
