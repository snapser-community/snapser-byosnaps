// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v5.26.1
// source: eventbus_services.proto

package proto

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	_ "google.golang.org/genproto/googleapis/api/visibility"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EventbusEventType int32

const (
	EventbusEventType_UNKNOWN_EVENT_TYPE         EventbusEventType = 0
	EventbusEventType_EVENTBUS_CONSUMERS_CHANGED EventbusEventType = 1
)

// Enum value maps for EventbusEventType.
var (
	EventbusEventType_name = map[int32]string{
		0: "UNKNOWN_EVENT_TYPE",
		1: "EVENTBUS_CONSUMERS_CHANGED",
	}
	EventbusEventType_value = map[string]int32{
		"UNKNOWN_EVENT_TYPE":         0,
		"EVENTBUS_CONSUMERS_CHANGED": 1,
	}
)

func (x EventbusEventType) Enum() *EventbusEventType {
	p := new(EventbusEventType)
	*p = x
	return p
}

func (x EventbusEventType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EventbusEventType) Descriptor() protoreflect.EnumDescriptor {
	return file_eventbus_services_proto_enumTypes[0].Descriptor()
}

func (EventbusEventType) Type() protoreflect.EnumType {
	return &file_eventbus_services_proto_enumTypes[0]
}

func (x EventbusEventType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EventbusEventType.Descriptor instead.
func (EventbusEventType) EnumDescriptor() ([]byte, []int) {
	return file_eventbus_services_proto_rawDescGZIP(), []int{0}
}

type SettingsImportExportData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version    string                    `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	Data       *MultiEnvEventbusSettings `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	ExportedAt int64                     `protobuf:"varint,3,opt,name=exported_at,json=exportedAt,proto3" json:"exported_at,omitempty"`
}

func (x *SettingsImportExportData) Reset() {
	*x = SettingsImportExportData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eventbus_services_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SettingsImportExportData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SettingsImportExportData) ProtoMessage() {}

func (x *SettingsImportExportData) ProtoReflect() protoreflect.Message {
	mi := &file_eventbus_services_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SettingsImportExportData.ProtoReflect.Descriptor instead.
func (*SettingsImportExportData) Descriptor() ([]byte, []int) {
	return file_eventbus_services_proto_rawDescGZIP(), []int{0}
}

func (x *SettingsImportExportData) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *SettingsImportExportData) GetData() *MultiEnvEventbusSettings {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *SettingsImportExportData) GetExportedAt() int64 {
	if x != nil {
		return x.ExportedAt
	}
	return 0
}

type EventbusSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Consumers []*Consumer `protobuf:"bytes,1,rep,name=consumers,proto3" json:"consumers,omitempty"`
}

func (x *EventbusSettings) Reset() {
	*x = EventbusSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eventbus_services_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventbusSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventbusSettings) ProtoMessage() {}

func (x *EventbusSettings) ProtoReflect() protoreflect.Message {
	mi := &file_eventbus_services_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventbusSettings.ProtoReflect.Descriptor instead.
func (*EventbusSettings) Descriptor() ([]byte, []int) {
	return file_eventbus_services_proto_rawDescGZIP(), []int{1}
}

func (x *EventbusSettings) GetConsumers() []*Consumer {
	if x != nil {
		return x.Consumers
	}
	return nil
}

type MultiEnvEventbusSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dev   *EventbusSettings `protobuf:"bytes,1,opt,name=dev,proto3" json:"dev,omitempty"`
	Stage *EventbusSettings `protobuf:"bytes,2,opt,name=stage,proto3" json:"stage,omitempty"`
	Prod  *EventbusSettings `protobuf:"bytes,3,opt,name=prod,proto3" json:"prod,omitempty"`
}

func (x *MultiEnvEventbusSettings) Reset() {
	*x = MultiEnvEventbusSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eventbus_services_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MultiEnvEventbusSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MultiEnvEventbusSettings) ProtoMessage() {}

func (x *MultiEnvEventbusSettings) ProtoReflect() protoreflect.Message {
	mi := &file_eventbus_services_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MultiEnvEventbusSettings.ProtoReflect.Descriptor instead.
func (*MultiEnvEventbusSettings) Descriptor() ([]byte, []int) {
	return file_eventbus_services_proto_rawDescGZIP(), []int{2}
}

func (x *MultiEnvEventbusSettings) GetDev() *EventbusSettings {
	if x != nil {
		return x.Dev
	}
	return nil
}

func (x *MultiEnvEventbusSettings) GetStage() *EventbusSettings {
	if x != nil {
		return x.Stage
	}
	return nil
}

func (x *MultiEnvEventbusSettings) GetProd() *EventbusSettings {
	if x != nil {
		return x.Prod
	}
	return nil
}

type GetEventTypesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetEventTypesRequest) Reset() {
	*x = GetEventTypesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eventbus_services_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEventTypesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEventTypesRequest) ProtoMessage() {}

func (x *GetEventTypesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eventbus_services_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEventTypesRequest.ProtoReflect.Descriptor instead.
func (*GetEventTypesRequest) Descriptor() ([]byte, []int) {
	return file_eventbus_services_proto_rawDescGZIP(), []int{3}
}

type GetEventTypesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventTypes []*SnapserEventType `protobuf:"bytes,1,rep,name=eventTypes,proto3" json:"eventTypes,omitempty"`
}

func (x *GetEventTypesResponse) Reset() {
	*x = GetEventTypesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eventbus_services_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEventTypesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEventTypesResponse) ProtoMessage() {}

func (x *GetEventTypesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eventbus_services_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEventTypesResponse.ProtoReflect.Descriptor instead.
func (*GetEventTypesResponse) Descriptor() ([]byte, []int) {
	return file_eventbus_services_proto_rawDescGZIP(), []int{4}
}

func (x *GetEventTypesResponse) GetEventTypes() []*SnapserEventType {
	if x != nil {
		return x.EventTypes
	}
	return nil
}

type DeleteConsumerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Environment string `protobuf:"bytes,2,opt,name=environment,proto3" json:"environment,omitempty"`
}

func (x *DeleteConsumerRequest) Reset() {
	*x = DeleteConsumerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eventbus_services_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteConsumerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteConsumerRequest) ProtoMessage() {}

func (x *DeleteConsumerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eventbus_services_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteConsumerRequest.ProtoReflect.Descriptor instead.
func (*DeleteConsumerRequest) Descriptor() ([]byte, []int) {
	return file_eventbus_services_proto_rawDescGZIP(), []int{5}
}

func (x *DeleteConsumerRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DeleteConsumerRequest) GetEnvironment() string {
	if x != nil {
		return x.Environment
	}
	return ""
}

type DeleteConsumerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteConsumerResponse) Reset() {
	*x = DeleteConsumerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eventbus_services_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteConsumerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteConsumerResponse) ProtoMessage() {}

func (x *DeleteConsumerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eventbus_services_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteConsumerResponse.ProtoReflect.Descriptor instead.
func (*DeleteConsumerResponse) Descriptor() ([]byte, []int) {
	return file_eventbus_services_proto_rawDescGZIP(), []int{6}
}

type GetConsumersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Environment string `protobuf:"bytes,1,opt,name=environment,proto3" json:"environment,omitempty"`
}

func (x *GetConsumersRequest) Reset() {
	*x = GetConsumersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eventbus_services_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetConsumersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConsumersRequest) ProtoMessage() {}

func (x *GetConsumersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eventbus_services_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConsumersRequest.ProtoReflect.Descriptor instead.
func (*GetConsumersRequest) Descriptor() ([]byte, []int) {
	return file_eventbus_services_proto_rawDescGZIP(), []int{7}
}

func (x *GetConsumersRequest) GetEnvironment() string {
	if x != nil {
		return x.Environment
	}
	return ""
}

type GetConsumersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Consumers []*Consumer `protobuf:"bytes,1,rep,name=consumers,proto3" json:"consumers,omitempty"`
}

func (x *GetConsumersResponse) Reset() {
	*x = GetConsumersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eventbus_services_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetConsumersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConsumersResponse) ProtoMessage() {}

func (x *GetConsumersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eventbus_services_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConsumersResponse.ProtoReflect.Descriptor instead.
func (*GetConsumersResponse) Descriptor() ([]byte, []int) {
	return file_eventbus_services_proto_rawDescGZIP(), []int{8}
}

func (x *GetConsumersResponse) GetConsumers() []*Consumer {
	if x != nil {
		return x.Consumers
	}
	return nil
}

type AddConsumerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string    `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Environment string    `protobuf:"bytes,2,opt,name=environment,proto3" json:"environment,omitempty"`
	Consumer    *Consumer `protobuf:"bytes,3,opt,name=consumer,proto3" json:"consumer,omitempty"`
	ByosnapID   string    `protobuf:"bytes,4,opt,name=byosnapID,proto3" json:"byosnapID,omitempty"`
}

func (x *AddConsumerRequest) Reset() {
	*x = AddConsumerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eventbus_services_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddConsumerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddConsumerRequest) ProtoMessage() {}

func (x *AddConsumerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eventbus_services_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddConsumerRequest.ProtoReflect.Descriptor instead.
func (*AddConsumerRequest) Descriptor() ([]byte, []int) {
	return file_eventbus_services_proto_rawDescGZIP(), []int{9}
}

func (x *AddConsumerRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AddConsumerRequest) GetEnvironment() string {
	if x != nil {
		return x.Environment
	}
	return ""
}

func (x *AddConsumerRequest) GetConsumer() *Consumer {
	if x != nil {
		return x.Consumer
	}
	return nil
}

func (x *AddConsumerRequest) GetByosnapID() string {
	if x != nil {
		return x.ByosnapID
	}
	return ""
}

type AddConsumerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Consumer *Consumer `protobuf:"bytes,1,opt,name=consumer,proto3" json:"consumer,omitempty"`
}

func (x *AddConsumerResponse) Reset() {
	*x = AddConsumerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eventbus_services_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddConsumerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddConsumerResponse) ProtoMessage() {}

func (x *AddConsumerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eventbus_services_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddConsumerResponse.ProtoReflect.Descriptor instead.
func (*AddConsumerResponse) Descriptor() ([]byte, []int) {
	return file_eventbus_services_proto_rawDescGZIP(), []int{10}
}

func (x *AddConsumerResponse) GetConsumer() *Consumer {
	if x != nil {
		return x.Consumer
	}
	return nil
}

type UpdateConsumerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string    `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Environment string    `protobuf:"bytes,2,opt,name=environment,proto3" json:"environment,omitempty"`
	Consumer    *Consumer `protobuf:"bytes,3,opt,name=consumer,proto3" json:"consumer,omitempty"`
}

func (x *UpdateConsumerRequest) Reset() {
	*x = UpdateConsumerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eventbus_services_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateConsumerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateConsumerRequest) ProtoMessage() {}

func (x *UpdateConsumerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eventbus_services_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateConsumerRequest.ProtoReflect.Descriptor instead.
func (*UpdateConsumerRequest) Descriptor() ([]byte, []int) {
	return file_eventbus_services_proto_rawDescGZIP(), []int{11}
}

func (x *UpdateConsumerRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateConsumerRequest) GetEnvironment() string {
	if x != nil {
		return x.Environment
	}
	return ""
}

func (x *UpdateConsumerRequest) GetConsumer() *Consumer {
	if x != nil {
		return x.Consumer
	}
	return nil
}

type UpdateConsumerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Consumer *Consumer `protobuf:"bytes,1,opt,name=consumer,proto3" json:"consumer,omitempty"`
}

func (x *UpdateConsumerResponse) Reset() {
	*x = UpdateConsumerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eventbus_services_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateConsumerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateConsumerResponse) ProtoMessage() {}

func (x *UpdateConsumerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eventbus_services_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateConsumerResponse.ProtoReflect.Descriptor instead.
func (*UpdateConsumerResponse) Descriptor() ([]byte, []int) {
	return file_eventbus_services_proto_rawDescGZIP(), []int{12}
}

func (x *UpdateConsumerResponse) GetConsumer() *Consumer {
	if x != nil {
		return x.Consumer
	}
	return nil
}

// Consumer is customer defined service that listens for events on a given subject.
type Consumer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Subjects  []string `protobuf:"bytes,4,rep,name=subjects,proto3" json:"subjects,omitempty"`
	CreatedAt int64    `protobuf:"varint,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt int64    `protobuf:"varint,6,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	// Types that are assignable to ConsumerType:
	//
	//	*Consumer_Webhook
	//	*Consumer_Websocket
	ConsumerType isConsumer_ConsumerType `protobuf_oneof:"consumerType"`
}

func (x *Consumer) Reset() {
	*x = Consumer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eventbus_services_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Consumer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Consumer) ProtoMessage() {}

func (x *Consumer) ProtoReflect() protoreflect.Message {
	mi := &file_eventbus_services_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Consumer.ProtoReflect.Descriptor instead.
func (*Consumer) Descriptor() ([]byte, []int) {
	return file_eventbus_services_proto_rawDescGZIP(), []int{13}
}

func (x *Consumer) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Consumer) GetSubjects() []string {
	if x != nil {
		return x.Subjects
	}
	return nil
}

func (x *Consumer) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *Consumer) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (m *Consumer) GetConsumerType() isConsumer_ConsumerType {
	if m != nil {
		return m.ConsumerType
	}
	return nil
}

func (x *Consumer) GetWebhook() *WebhookConsumer {
	if x, ok := x.GetConsumerType().(*Consumer_Webhook); ok {
		return x.Webhook
	}
	return nil
}

func (x *Consumer) GetWebsocket() *WebsocketConsumer {
	if x, ok := x.GetConsumerType().(*Consumer_Websocket); ok {
		return x.Websocket
	}
	return nil
}

type isConsumer_ConsumerType interface {
	isConsumer_ConsumerType()
}

type Consumer_Webhook struct {
	Webhook *WebhookConsumer `protobuf:"bytes,10,opt,name=webhook,proto3,oneof"`
}

type Consumer_Websocket struct {
	Websocket *WebsocketConsumer `protobuf:"bytes,11,opt,name=websocket,proto3,oneof"`
}

func (*Consumer_Webhook) isConsumer_ConsumerType() {}

func (*Consumer_Websocket) isConsumer_ConsumerType() {}

type WebhookConsumer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ConsumerId string `protobuf:"bytes,2,opt,name=consumer_id,json=consumerId,proto3" json:"consumer_id,omitempty"`
	Url        string `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
	Secret     string `protobuf:"bytes,4,opt,name=secret,proto3" json:"secret,omitempty"`
	// LastRequest is populated by the eventbus service (not stored in the database)
	LastRequest *WebhookRequest `protobuf:"bytes,5,opt,name=lastRequest,proto3" json:"lastRequest,omitempty"`
}

func (x *WebhookConsumer) Reset() {
	*x = WebhookConsumer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eventbus_services_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebhookConsumer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebhookConsumer) ProtoMessage() {}

func (x *WebhookConsumer) ProtoReflect() protoreflect.Message {
	mi := &file_eventbus_services_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebhookConsumer.ProtoReflect.Descriptor instead.
func (*WebhookConsumer) Descriptor() ([]byte, []int) {
	return file_eventbus_services_proto_rawDescGZIP(), []int{14}
}

func (x *WebhookConsumer) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *WebhookConsumer) GetConsumerId() string {
	if x != nil {
		return x.ConsumerId
	}
	return ""
}

func (x *WebhookConsumer) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *WebhookConsumer) GetSecret() string {
	if x != nil {
		return x.Secret
	}
	return ""
}

func (x *WebhookConsumer) GetLastRequest() *WebhookRequest {
	if x != nil {
		return x.LastRequest
	}
	return nil
}

type WebsocketConsumer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *WebsocketConsumer) Reset() {
	*x = WebsocketConsumer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eventbus_services_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebsocketConsumer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebsocketConsumer) ProtoMessage() {}

func (x *WebsocketConsumer) ProtoReflect() protoreflect.Message {
	mi := &file_eventbus_services_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebsocketConsumer.ProtoReflect.Descriptor instead.
func (*WebsocketConsumer) Descriptor() ([]byte, []int) {
	return file_eventbus_services_proto_rawDescGZIP(), []int{15}
}

type WebhookRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ConsumerId     string `protobuf:"bytes,2,opt,name=consumer_id,json=consumerId,proto3" json:"consumer_id,omitempty"`
	Date           string `protobuf:"bytes,3,opt,name=date,proto3" json:"date,omitempty"`
	Url            string `protobuf:"bytes,4,opt,name=url,proto3" json:"url,omitempty"`
	ResponseCode   int32  `protobuf:"varint,5,opt,name=response_code,json=responseCode,proto3" json:"response_code,omitempty"`
	ResponseBody   string `protobuf:"bytes,6,opt,name=response_body,json=responseBody,proto3" json:"response_body,omitempty"`
	Err            string `protobuf:"bytes,7,opt,name=err,proto3" json:"err,omitempty"` // The go error message, if any
	DurationMillis int64  `protobuf:"varint,8,opt,name=duration_millis,json=durationMillis,proto3" json:"duration_millis,omitempty"`
}

func (x *WebhookRequest) Reset() {
	*x = WebhookRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eventbus_services_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebhookRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebhookRequest) ProtoMessage() {}

func (x *WebhookRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eventbus_services_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebhookRequest.ProtoReflect.Descriptor instead.
func (*WebhookRequest) Descriptor() ([]byte, []int) {
	return file_eventbus_services_proto_rawDescGZIP(), []int{16}
}

func (x *WebhookRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *WebhookRequest) GetConsumerId() string {
	if x != nil {
		return x.ConsumerId
	}
	return ""
}

func (x *WebhookRequest) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *WebhookRequest) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *WebhookRequest) GetResponseCode() int32 {
	if x != nil {
		return x.ResponseCode
	}
	return 0
}

func (x *WebhookRequest) GetResponseBody() string {
	if x != nil {
		return x.ResponseBody
	}
	return ""
}

func (x *WebhookRequest) GetErr() string {
	if x != nil {
		return x.Err
	}
	return ""
}

func (x *WebhookRequest) GetDurationMillis() int64 {
	if x != nil {
		return x.DurationMillis
	}
	return 0
}

// EventConsumersUpdated is published when one or more consumers are updated, added or deleted.
type EventConsumersChanged struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Consumers []*Consumer `protobuf:"bytes,1,rep,name=consumers,proto3" json:"consumers,omitempty"`
}

func (x *EventConsumersChanged) Reset() {
	*x = EventConsumersChanged{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eventbus_services_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventConsumersChanged) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventConsumersChanged) ProtoMessage() {}

func (x *EventConsumersChanged) ProtoReflect() protoreflect.Message {
	mi := &file_eventbus_services_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventConsumersChanged.ProtoReflect.Descriptor instead.
func (*EventConsumersChanged) Descriptor() ([]byte, []int) {
	return file_eventbus_services_proto_rawDescGZIP(), []int{17}
}

func (x *EventConsumersChanged) GetConsumers() []*Consumer {
	if x != nil {
		return x.Consumers
	}
	return nil
}

type GetUserDataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *GetUserDataRequest) Reset() {
	*x = GetUserDataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eventbus_services_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserDataRequest) ProtoMessage() {}

func (x *GetUserDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eventbus_services_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserDataRequest.ProtoReflect.Descriptor instead.
func (*GetUserDataRequest) Descriptor() ([]byte, []int) {
	return file_eventbus_services_proto_rawDescGZIP(), []int{18}
}

func (x *GetUserDataRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type GetUserDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetUserDataResponse) Reset() {
	*x = GetUserDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eventbus_services_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserDataResponse) ProtoMessage() {}

func (x *GetUserDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eventbus_services_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserDataResponse.ProtoReflect.Descriptor instead.
func (*GetUserDataResponse) Descriptor() ([]byte, []int) {
	return file_eventbus_services_proto_rawDescGZIP(), []int{19}
}

type DeleteUserDataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *DeleteUserDataRequest) Reset() {
	*x = DeleteUserDataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eventbus_services_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteUserDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteUserDataRequest) ProtoMessage() {}

func (x *DeleteUserDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eventbus_services_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteUserDataRequest.ProtoReflect.Descriptor instead.
func (*DeleteUserDataRequest) Descriptor() ([]byte, []int) {
	return file_eventbus_services_proto_rawDescGZIP(), []int{20}
}

func (x *DeleteUserDataRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type DeleteUserDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *DeleteUserDataResponse) Reset() {
	*x = DeleteUserDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eventbus_services_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteUserDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteUserDataResponse) ProtoMessage() {}

func (x *DeleteUserDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eventbus_services_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteUserDataResponse.ProtoReflect.Descriptor instead.
func (*DeleteUserDataResponse) Descriptor() ([]byte, []int) {
	return file_eventbus_services_proto_rawDescGZIP(), []int{21}
}

func (x *DeleteUserDataResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

var File_eventbus_services_proto protoreflect.FileDescriptor

var file_eventbus_services_proto_rawDesc = []byte{
	0x0a, 0x17, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x62, 0x75, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x62, 0x75, 0x73, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x69,
	0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x62, 0x75,
	0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f,
	0x62, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x6f, 0x70, 0x65, 0x6e, 0x61,
	0x70, 0x69, 0x76, 0x32, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8d, 0x01, 0x0a, 0x18,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x45, 0x78,
	0x70, 0x6f, 0x72, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x36, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x22, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x62, 0x75, 0x73, 0x2e, 0x4d, 0x75, 0x6c, 0x74,
	0x69, 0x45, 0x6e, 0x76, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x62, 0x75, 0x73, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x78,
	0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x44, 0x0a, 0x10, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x62, 0x75, 0x73, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12,
	0x30, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x62, 0x75, 0x73, 0x2e, 0x43, 0x6f,
	0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72,
	0x73, 0x22, 0xaa, 0x01, 0x0a, 0x18, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x45, 0x6e, 0x76, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x62, 0x75, 0x73, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x2c,
	0x0a, 0x03, 0x64, 0x65, 0x76, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x62, 0x75, 0x73, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x62, 0x75, 0x73, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x03, 0x64, 0x65, 0x76, 0x12, 0x30, 0x0a, 0x05,
	0x73, 0x74, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x62, 0x75, 0x73, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x62, 0x75, 0x73, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x05, 0x73, 0x74, 0x61, 0x67, 0x65, 0x12, 0x2e,
	0x0a, 0x04, 0x70, 0x72, 0x6f, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x62, 0x75, 0x73, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x62, 0x75, 0x73,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x04, 0x70, 0x72, 0x6f, 0x64, 0x22, 0x16,
	0x0a, 0x14, 0x47, 0x65, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x53, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x3a, 0x0a, 0x0a, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x62, 0x75, 0x73, 0x2e, 0x53,
	0x6e, 0x61, 0x70, 0x73, 0x65, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x0a, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x73, 0x22, 0x62, 0x0a, 0x15, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x39, 0x0a, 0x0b, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x17, 0xfa, 0x42, 0x14, 0x72, 0x12,
	0x52, 0x03, 0x64, 0x65, 0x76, 0x52, 0x05, 0x73, 0x74, 0x61, 0x67, 0x65, 0x52, 0x04, 0x70, 0x72,
	0x6f, 0x64, 0x52, 0x0b, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x22,
	0x18, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x50, 0x0a, 0x13, 0x47, 0x65, 0x74,
	0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x39, 0x0a, 0x0b, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x17, 0xfa, 0x42, 0x14, 0x72, 0x12, 0x52, 0x03, 0x64, 0x65,
	0x76, 0x52, 0x05, 0x73, 0x74, 0x61, 0x67, 0x65, 0x52, 0x04, 0x70, 0x72, 0x6f, 0x64, 0x52, 0x0b,
	0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x48, 0x0a, 0x14, 0x47,
	0x65, 0x74, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x62, 0x75,
	0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x73,
	0x75, 0x6d, 0x65, 0x72, 0x73, 0x22, 0xdc, 0x01, 0x0a, 0x12, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x6e,
	0x73, 0x75, 0x6d, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x39, 0x0a, 0x0b,
	0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x17, 0xfa, 0x42, 0x14, 0x72, 0x12, 0x52, 0x03, 0x64, 0x65, 0x76, 0x52, 0x05, 0x73,
	0x74, 0x61, 0x67, 0x65, 0x52, 0x04, 0x70, 0x72, 0x6f, 0x64, 0x52, 0x0b, 0x65, 0x6e, 0x76, 0x69,
	0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x2e, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x73, 0x75,
	0x6d, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x62, 0x75, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x52, 0x08, 0x63,
	0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x12, 0x4b, 0x0a, 0x09, 0x62, 0x79, 0x6f, 0x73, 0x6e,
	0x61, 0x70, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x2d, 0xfa, 0x42, 0x2a, 0x72,
	0x28, 0x18, 0x64, 0x32, 0x21, 0x28, 0x3f, 0x69, 0x29, 0x5e, 0x5b, 0x61, 0x2d, 0x7a, 0x5d, 0x28,
	0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x2d, 0x5f, 0x5d, 0x2a, 0x5b, 0x61, 0x2d, 0x7a, 0x30,
	0x2d, 0x39, 0x5d, 0x29, 0x3f, 0x24, 0xd0, 0x01, 0x01, 0x52, 0x09, 0x62, 0x79, 0x6f, 0x73, 0x6e,
	0x61, 0x70, 0x49, 0x44, 0x22, 0x45, 0x0a, 0x13, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x6e, 0x73, 0x75,
	0x6d, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x08, 0x63,
	0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x62, 0x75, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65,
	0x72, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x22, 0x92, 0x01, 0x0a, 0x15,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x39, 0x0a, 0x0b, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x17, 0xfa, 0x42, 0x14, 0x72,
	0x12, 0x52, 0x03, 0x64, 0x65, 0x76, 0x52, 0x05, 0x73, 0x74, 0x61, 0x67, 0x65, 0x52, 0x04, 0x70,
	0x72, 0x6f, 0x64, 0x52, 0x0b, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x12, 0x2e, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x62, 0x75, 0x73, 0x2e, 0x43, 0x6f,
	0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72,
	0x22, 0x48, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x08, 0x63, 0x6f,
	0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x62, 0x75, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72,
	0x52, 0x08, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x22, 0xf8, 0x01, 0x0a, 0x08, 0x43,
	0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x75, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x73, 0x75, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x35, 0x0a, 0x07, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x62, 0x75, 0x73, 0x2e, 0x57, 0x65,
	0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x48, 0x00, 0x52,
	0x07, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x12, 0x3b, 0x0a, 0x09, 0x77, 0x65, 0x62, 0x73,
	0x6f, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x62, 0x75, 0x73, 0x2e, 0x57, 0x65, 0x62, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74,
	0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x48, 0x00, 0x52, 0x09, 0x77, 0x65, 0x62, 0x73,
	0x6f, 0x63, 0x6b, 0x65, 0x74, 0x42, 0x0e, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65,
	0x72, 0x54, 0x79, 0x70, 0x65, 0x22, 0xa8, 0x01, 0x0a, 0x0f, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f,
	0x6b, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x6e,
	0x73, 0x75, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72,
	0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65,
	0x63, 0x72, 0x65, 0x74, 0x12, 0x3a, 0x0a, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x62, 0x75, 0x73, 0x2e, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x52, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x22, 0x13, 0x0a, 0x11, 0x57, 0x65, 0x62, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x43, 0x6f, 0x6e,
	0x73, 0x75, 0x6d, 0x65, 0x72, 0x22, 0xec, 0x01, 0x0a, 0x0e, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f,
	0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x73,
	0x75, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63,
	0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12,
	0x23, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x5f, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x72, 0x72,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65, 0x72, 0x72, 0x12, 0x27, 0x0a, 0x0f, 0x64,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x69, 0x6c, 0x6c, 0x69, 0x73, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x69,
	0x6c, 0x6c, 0x69, 0x73, 0x22, 0x49, 0x0a, 0x15, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e,
	0x73, 0x75, 0x6d, 0x65, 0x72, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x12, 0x30, 0x0a,
	0x09, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x62, 0x75, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x73,
	0x75, 0x6d, 0x65, 0x72, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x73, 0x22,
	0x8d, 0x01, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x77, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x5e, 0x92, 0x41, 0x3c, 0x32, 0x36, 0x55, 0x73,
	0x65, 0x72, 0x20, 0x49, 0x44, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x74, 0x68, 0x65, 0x20, 0x75, 0x73,
	0x65, 0x72, 0x20, 0x77, 0x68, 0x6f, 0x27, 0x73, 0x20, 0x75, 0x73, 0x65, 0x72, 0x20, 0x64, 0x61,
	0x74, 0x61, 0x20, 0x69, 0x73, 0x20, 0x62, 0x65, 0x69, 0x6e, 0x67, 0x20, 0x72, 0x65, 0x74, 0x75,
	0x72, 0x6e, 0x65, 0x64, 0x9a, 0x02, 0x01, 0x07, 0xe0, 0x41, 0x02, 0xfa, 0x42, 0x19, 0x72, 0x17,
	0x10, 0x01, 0x18, 0x32, 0x32, 0x11, 0x28, 0x3f, 0x69, 0x29, 0x5e, 0x5b, 0x61, 0x2d, 0x7a, 0x30,
	0x2d, 0x39, 0x2d, 0x5f, 0x5d, 0x2a, 0x24, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22,
	0x15, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x8f, 0x01, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x76, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x5d, 0x92, 0x41, 0x3b, 0x32, 0x35, 0x55, 0x73, 0x65, 0x72, 0x20, 0x49, 0x44, 0x20,
	0x66, 0x6f, 0x72, 0x20, 0x74, 0x68, 0x65, 0x20, 0x75, 0x73, 0x65, 0x72, 0x20, 0x77, 0x68, 0x6f,
	0x27, 0x73, 0x20, 0x75, 0x73, 0x65, 0x72, 0x20, 0x64, 0x61, 0x74, 0x61, 0x20, 0x69, 0x73, 0x20,
	0x62, 0x65, 0x69, 0x6e, 0x67, 0x20, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x9a, 0x02, 0x01,
	0x07, 0xe0, 0x41, 0x02, 0xfa, 0x42, 0x19, 0x72, 0x17, 0x10, 0x01, 0x18, 0x32, 0x32, 0x11, 0x28,
	0x3f, 0x69, 0x29, 0x5e, 0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x2d, 0x5f, 0x5d, 0x2a, 0x24,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x32, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x2a, 0x4b, 0x0a, 0x11,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x62, 0x75, 0x73, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x16, 0x0a, 0x12, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x56, 0x45,
	0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x10, 0x00, 0x12, 0x1e, 0x0a, 0x1a, 0x45, 0x56, 0x45,
	0x4e, 0x54, 0x42, 0x55, 0x53, 0x5f, 0x43, 0x4f, 0x4e, 0x53, 0x55, 0x4d, 0x45, 0x52, 0x53, 0x5f,
	0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x44, 0x10, 0x01, 0x32, 0xe8, 0x0f, 0x0a, 0x0f, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x62, 0x75, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x85, 0x01,
	0x0a, 0x0c, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x73, 0x12, 0x1d,
	0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x62, 0x75, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e,
	0x73, 0x75, 0x6d, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x62, 0x75, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x73,
	0x75, 0x6d, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x36, 0xfa,
	0xd2, 0xe4, 0x93, 0x02, 0x09, 0x12, 0x07, 0x50, 0x52, 0x49, 0x56, 0x41, 0x54, 0x45, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x21, 0x12, 0x1f, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x62,
	0x75, 0x73, 0x2f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2f, 0x63, 0x6f, 0x6e, 0x73,
	0x75, 0x6d, 0x65, 0x72, 0x73, 0x12, 0x85, 0x01, 0x0a, 0x0b, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x6e,
	0x73, 0x75, 0x6d, 0x65, 0x72, 0x12, 0x1c, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x62, 0x75, 0x73,
	0x2e, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x62, 0x75, 0x73, 0x2e, 0x41,
	0x64, 0x64, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x39, 0xfa, 0xd2, 0xe4, 0x93, 0x02, 0x09, 0x12, 0x07, 0x50, 0x52, 0x49, 0x56,
	0x41, 0x54, 0x45, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x24, 0x3a, 0x01, 0x2a, 0x22, 0x1f, 0x2f, 0x76,
	0x31, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x62, 0x75, 0x73, 0x2f, 0x73, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x2f, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x73, 0x12, 0x90, 0x01,
	0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72,
	0x12, 0x1f, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x62, 0x75, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x20, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x62, 0x75, 0x73, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x3b, 0xfa, 0xd2, 0xe4, 0x93, 0x02, 0x09, 0x12, 0x07, 0x50, 0x52, 0x49,
	0x56, 0x41, 0x54, 0x45, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x26, 0x2a, 0x24, 0x2f, 0x76, 0x31, 0x2f,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x62, 0x75, 0x73, 0x2f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x2f, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d,
	0x12, 0x93, 0x01, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x73, 0x75,
	0x6d, 0x65, 0x72, 0x12, 0x1f, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x62, 0x75, 0x73, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x62, 0x75, 0x73, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3e, 0xfa, 0xd2, 0xe4, 0x93, 0x02, 0x09, 0x12, 0x07,
	0x50, 0x52, 0x49, 0x56, 0x41, 0x54, 0x45, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x29, 0x3a, 0x01, 0x2a,
	0x1a, 0x24, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x62, 0x75, 0x73, 0x2f, 0x73,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2f, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72,
	0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x8a, 0x01, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x73, 0x12, 0x1e, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x62, 0x75, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x62, 0x75, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x38, 0xfa, 0xd2, 0xe4, 0x93, 0x02,
	0x09, 0x12, 0x07, 0x50, 0x52, 0x49, 0x56, 0x41, 0x54, 0x45, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x23,
	0x12, 0x21, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x62, 0x75, 0x73, 0x2f, 0x73,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2d, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x12, 0x8d, 0x01, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x1c, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x62, 0x75, 0x73, 0x2e, 0x47,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1d, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x62, 0x75, 0x73, 0x2e, 0x47, 0x65, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x41, 0xfa, 0xd2, 0xe4, 0x93, 0x02, 0x09, 0x12, 0x07, 0x50, 0x52, 0x49, 0x56, 0x41, 0x54,
	0x45, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2c, 0x12, 0x2a, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x62, 0x75, 0x73, 0x2f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2f, 0x75,
	0x73, 0x65, 0x72, 0x73, 0x2f, 0x7b, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x96, 0x01, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1f, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x62, 0x75,
	0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x62,
	0x75, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x41, 0xfa, 0xd2, 0xe4, 0x93, 0x02,
	0x09, 0x12, 0x07, 0x50, 0x52, 0x49, 0x56, 0x41, 0x54, 0x45, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2c,
	0x2a, 0x2a, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x62, 0x75, 0x73, 0x2f, 0x73,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2f, 0x7b, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x12, 0x81, 0x01, 0x0a,
	0x0e, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x22, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x62,
	0x75, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x49, 0x6d, 0x70, 0x6f, 0x72,
	0x74, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x44, 0x61, 0x74, 0x61, 0x22, 0x33, 0xfa, 0xd2, 0xe4,
	0x93, 0x02, 0x09, 0x12, 0x07, 0x50, 0x52, 0x49, 0x56, 0x41, 0x54, 0x45, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x1e, 0x12, 0x1c, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x62, 0x75, 0x73,
	0x2f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2f, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74,
	0x12, 0x84, 0x01, 0x0a, 0x0e, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x12, 0x22, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x62, 0x75, 0x73, 0x2e, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x45, 0x78, 0x70,
	0x6f, 0x72, 0x74, 0x44, 0x61, 0x74, 0x61, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22,
	0x36, 0xfa, 0xd2, 0xe4, 0x93, 0x02, 0x09, 0x12, 0x07, 0x50, 0x52, 0x49, 0x56, 0x41, 0x54, 0x45,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x21, 0x3a, 0x01, 0x2a, 0x22, 0x1c, 0x2f, 0x76, 0x31, 0x2f, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x62, 0x75, 0x73, 0x2f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73,
	0x2f, 0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x12, 0xa1, 0x01, 0x0a, 0x16, 0x56, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x65, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x12, 0x22, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x62, 0x75, 0x73, 0x2e, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x45, 0x78, 0x70, 0x6f,
	0x72, 0x74, 0x44, 0x61, 0x74, 0x61, 0x1a, 0x22, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x62, 0x75,
	0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74,
	0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x44, 0x61, 0x74, 0x61, 0x22, 0x3f, 0xfa, 0xd2, 0xe4, 0x93,
	0x02, 0x09, 0x12, 0x07, 0x50, 0x52, 0x49, 0x56, 0x41, 0x54, 0x45, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x2a, 0x3a, 0x01, 0x2a, 0x22, 0x25, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x62,
	0x75, 0x73, 0x2f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2f, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x65, 0x2d, 0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x98, 0x02, 0x0a, 0x15,
	0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x42, 0x79, 0x6f, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x73, 0x12, 0x26, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x62, 0x75, 0x73,
	0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x42, 0x79, 0x6f, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x62, 0x75, 0x73, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65,
	0x72, 0x42, 0x79, 0x6f, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xad, 0x01, 0x92, 0x41, 0x68, 0x12, 0x07, 0x42, 0x59,
	0x4f, 0x53, 0x6e, 0x61, 0x70, 0x1a, 0x2a, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x73,
	0x20, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x20, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x20, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x61, 0x20, 0x42, 0x59, 0x4f, 0x53, 0x6e, 0x61,
	0x70, 0x6a, 0x31, 0x0a, 0x14, 0x78, 0x2d, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x65, 0x72, 0x2d, 0x61,
	0x75, 0x74, 0x68, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x19, 0x32, 0x17, 0x0a, 0x09, 0x1a,
	0x07, 0x61, 0x70, 0x69, 0x2d, 0x6b, 0x65, 0x79, 0x0a, 0x0a, 0x1a, 0x08, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0xfa, 0xd2, 0xe4, 0x93, 0x02, 0x08, 0x12, 0x06, 0x50, 0x55, 0x42, 0x4c,
	0x49, 0x43, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2e, 0x3a, 0x01, 0x2a, 0x1a, 0x29, 0x2f, 0x76, 0x31,
	0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x62, 0x75, 0x73, 0x2f, 0x62, 0x79, 0x6f, 0x2f, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x7b, 0x62, 0x79, 0x6f, 0x73, 0x6e,
	0x61, 0x70, 0x5f, 0x69, 0x64, 0x7d, 0x12, 0x9b, 0x02, 0x0a, 0x0f, 0x50, 0x75, 0x62, 0x6c, 0x69,
	0x73, 0x68, 0x42, 0x79, 0x6f, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x20, 0x2e, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x62, 0x75, 0x73, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x42, 0x79, 0x6f,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x62, 0x75, 0x73, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x42,
	0x79, 0x6f, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0xc2, 0x01, 0x92, 0x41, 0x78, 0x12, 0x07, 0x42, 0x59, 0x4f, 0x53, 0x6e, 0x61, 0x70, 0x1a, 0x3a,
	0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x73, 0x20, 0x61, 0x20, 0x42, 0x59, 0x4f, 0x53,
	0x6e, 0x61, 0x70, 0x20, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x20, 0x74, 0x6f, 0x20, 0x4e, 0x41, 0x54,
	0x53, 0x20, 0x76, 0x69, 0x61, 0x20, 0x74, 0x68, 0x65, 0x20, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x42,
	0x75, 0x73, 0x20, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x6a, 0x31, 0x0a, 0x14, 0x78, 0x2d,
	0x73, 0x6e, 0x61, 0x70, 0x73, 0x65, 0x72, 0x2d, 0x61, 0x75, 0x74, 0x68, 0x2d, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x12, 0x19, 0x32, 0x17, 0x0a, 0x09, 0x1a, 0x07, 0x61, 0x70, 0x69, 0x2d, 0x6b, 0x65,
	0x79, 0x0a, 0x0a, 0x1a, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0xfa, 0xd2, 0xe4,
	0x93, 0x02, 0x08, 0x12, 0x06, 0x50, 0x55, 0x42, 0x4c, 0x49, 0x43, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x33, 0x3a, 0x01, 0x2a, 0x22, 0x2e, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x62,
	0x75, 0x73, 0x2f, 0x62, 0x79, 0x6f, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x7b, 0x62,
	0x79, 0x6f, 0x73, 0x6e, 0x61, 0x70, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x7b, 0x73, 0x75, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x7d, 0x42, 0x33, 0x5a, 0x31, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x65, 0x72, 0x2d, 0x65, 0x6e, 0x67, 0x69, 0x6e,
	0x65, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x62, 0x75, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_eventbus_services_proto_rawDescOnce sync.Once
	file_eventbus_services_proto_rawDescData = file_eventbus_services_proto_rawDesc
)

func file_eventbus_services_proto_rawDescGZIP() []byte {
	file_eventbus_services_proto_rawDescOnce.Do(func() {
		file_eventbus_services_proto_rawDescData = protoimpl.X.CompressGZIP(file_eventbus_services_proto_rawDescData)
	})
	return file_eventbus_services_proto_rawDescData
}

var file_eventbus_services_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_eventbus_services_proto_msgTypes = make([]protoimpl.MessageInfo, 22)
var file_eventbus_services_proto_goTypes = []interface{}{
	(EventbusEventType)(0),                // 0: eventbus.EventbusEventType
	(*SettingsImportExportData)(nil),      // 1: eventbus.SettingsImportExportData
	(*EventbusSettings)(nil),              // 2: eventbus.EventbusSettings
	(*MultiEnvEventbusSettings)(nil),      // 3: eventbus.MultiEnvEventbusSettings
	(*GetEventTypesRequest)(nil),          // 4: eventbus.GetEventTypesRequest
	(*GetEventTypesResponse)(nil),         // 5: eventbus.GetEventTypesResponse
	(*DeleteConsumerRequest)(nil),         // 6: eventbus.DeleteConsumerRequest
	(*DeleteConsumerResponse)(nil),        // 7: eventbus.DeleteConsumerResponse
	(*GetConsumersRequest)(nil),           // 8: eventbus.GetConsumersRequest
	(*GetConsumersResponse)(nil),          // 9: eventbus.GetConsumersResponse
	(*AddConsumerRequest)(nil),            // 10: eventbus.AddConsumerRequest
	(*AddConsumerResponse)(nil),           // 11: eventbus.AddConsumerResponse
	(*UpdateConsumerRequest)(nil),         // 12: eventbus.UpdateConsumerRequest
	(*UpdateConsumerResponse)(nil),        // 13: eventbus.UpdateConsumerResponse
	(*Consumer)(nil),                      // 14: eventbus.Consumer
	(*WebhookConsumer)(nil),               // 15: eventbus.WebhookConsumer
	(*WebsocketConsumer)(nil),             // 16: eventbus.WebsocketConsumer
	(*WebhookRequest)(nil),                // 17: eventbus.WebhookRequest
	(*EventConsumersChanged)(nil),         // 18: eventbus.EventConsumersChanged
	(*GetUserDataRequest)(nil),            // 19: eventbus.GetUserDataRequest
	(*GetUserDataResponse)(nil),           // 20: eventbus.GetUserDataResponse
	(*DeleteUserDataRequest)(nil),         // 21: eventbus.DeleteUserDataRequest
	(*DeleteUserDataResponse)(nil),        // 22: eventbus.DeleteUserDataResponse
	(*SnapserEventType)(nil),              // 23: eventbus.SnapserEventType
	(*emptypb.Empty)(nil),                 // 24: google.protobuf.Empty
	(*RegisterByoEventTypesRequest)(nil),  // 25: eventbus.RegisterByoEventTypesRequest
	(*PublishByoEventRequest)(nil),        // 26: eventbus.PublishByoEventRequest
	(*RegisterByoEventTypesResponse)(nil), // 27: eventbus.RegisterByoEventTypesResponse
	(*PublishByoEventResponse)(nil),       // 28: eventbus.PublishByoEventResponse
}
var file_eventbus_services_proto_depIdxs = []int32{
	3,  // 0: eventbus.SettingsImportExportData.data:type_name -> eventbus.MultiEnvEventbusSettings
	14, // 1: eventbus.EventbusSettings.consumers:type_name -> eventbus.Consumer
	2,  // 2: eventbus.MultiEnvEventbusSettings.dev:type_name -> eventbus.EventbusSettings
	2,  // 3: eventbus.MultiEnvEventbusSettings.stage:type_name -> eventbus.EventbusSettings
	2,  // 4: eventbus.MultiEnvEventbusSettings.prod:type_name -> eventbus.EventbusSettings
	23, // 5: eventbus.GetEventTypesResponse.eventTypes:type_name -> eventbus.SnapserEventType
	14, // 6: eventbus.GetConsumersResponse.consumers:type_name -> eventbus.Consumer
	14, // 7: eventbus.AddConsumerRequest.consumer:type_name -> eventbus.Consumer
	14, // 8: eventbus.AddConsumerResponse.consumer:type_name -> eventbus.Consumer
	14, // 9: eventbus.UpdateConsumerRequest.consumer:type_name -> eventbus.Consumer
	14, // 10: eventbus.UpdateConsumerResponse.consumer:type_name -> eventbus.Consumer
	15, // 11: eventbus.Consumer.webhook:type_name -> eventbus.WebhookConsumer
	16, // 12: eventbus.Consumer.websocket:type_name -> eventbus.WebsocketConsumer
	17, // 13: eventbus.WebhookConsumer.lastRequest:type_name -> eventbus.WebhookRequest
	14, // 14: eventbus.EventConsumersChanged.consumers:type_name -> eventbus.Consumer
	8,  // 15: eventbus.EventbusService.GetConsumers:input_type -> eventbus.GetConsumersRequest
	10, // 16: eventbus.EventbusService.AddConsumer:input_type -> eventbus.AddConsumerRequest
	6,  // 17: eventbus.EventbusService.DeleteConsumer:input_type -> eventbus.DeleteConsumerRequest
	12, // 18: eventbus.EventbusService.UpdateConsumer:input_type -> eventbus.UpdateConsumerRequest
	4,  // 19: eventbus.EventbusService.GetEventTypes:input_type -> eventbus.GetEventTypesRequest
	19, // 20: eventbus.EventbusService.GetUserData:input_type -> eventbus.GetUserDataRequest
	21, // 21: eventbus.EventbusService.DeleteUserData:input_type -> eventbus.DeleteUserDataRequest
	24, // 22: eventbus.EventbusService.ExportSettings:input_type -> google.protobuf.Empty
	1,  // 23: eventbus.EventbusService.ImportSettings:input_type -> eventbus.SettingsImportExportData
	1,  // 24: eventbus.EventbusService.ValidateImportSettings:input_type -> eventbus.SettingsImportExportData
	25, // 25: eventbus.EventbusService.RegisterByoEventTypes:input_type -> eventbus.RegisterByoEventTypesRequest
	26, // 26: eventbus.EventbusService.PublishByoEvent:input_type -> eventbus.PublishByoEventRequest
	9,  // 27: eventbus.EventbusService.GetConsumers:output_type -> eventbus.GetConsumersResponse
	11, // 28: eventbus.EventbusService.AddConsumer:output_type -> eventbus.AddConsumerResponse
	7,  // 29: eventbus.EventbusService.DeleteConsumer:output_type -> eventbus.DeleteConsumerResponse
	13, // 30: eventbus.EventbusService.UpdateConsumer:output_type -> eventbus.UpdateConsumerResponse
	5,  // 31: eventbus.EventbusService.GetEventTypes:output_type -> eventbus.GetEventTypesResponse
	20, // 32: eventbus.EventbusService.GetUserData:output_type -> eventbus.GetUserDataResponse
	22, // 33: eventbus.EventbusService.DeleteUserData:output_type -> eventbus.DeleteUserDataResponse
	1,  // 34: eventbus.EventbusService.ExportSettings:output_type -> eventbus.SettingsImportExportData
	24, // 35: eventbus.EventbusService.ImportSettings:output_type -> google.protobuf.Empty
	1,  // 36: eventbus.EventbusService.ValidateImportSettings:output_type -> eventbus.SettingsImportExportData
	27, // 37: eventbus.EventbusService.RegisterByoEventTypes:output_type -> eventbus.RegisterByoEventTypesResponse
	28, // 38: eventbus.EventbusService.PublishByoEvent:output_type -> eventbus.PublishByoEventResponse
	27, // [27:39] is the sub-list for method output_type
	15, // [15:27] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_eventbus_services_proto_init() }
func file_eventbus_services_proto_init() {
	if File_eventbus_services_proto != nil {
		return
	}
	file_eventbus_types_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_eventbus_services_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SettingsImportExportData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eventbus_services_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventbusSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eventbus_services_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MultiEnvEventbusSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eventbus_services_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEventTypesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eventbus_services_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEventTypesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eventbus_services_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteConsumerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eventbus_services_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteConsumerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eventbus_services_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetConsumersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eventbus_services_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetConsumersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eventbus_services_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddConsumerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eventbus_services_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddConsumerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eventbus_services_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateConsumerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eventbus_services_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateConsumerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eventbus_services_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Consumer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eventbus_services_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebhookConsumer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eventbus_services_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebsocketConsumer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eventbus_services_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebhookRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eventbus_services_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventConsumersChanged); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eventbus_services_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserDataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eventbus_services_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eventbus_services_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteUserDataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eventbus_services_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteUserDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_eventbus_services_proto_msgTypes[13].OneofWrappers = []interface{}{
		(*Consumer_Webhook)(nil),
		(*Consumer_Websocket)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_eventbus_services_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   22,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_eventbus_services_proto_goTypes,
		DependencyIndexes: file_eventbus_services_proto_depIdxs,
		EnumInfos:         file_eventbus_services_proto_enumTypes,
		MessageInfos:      file_eventbus_services_proto_msgTypes,
	}.Build()
	File_eventbus_services_proto = out.File
	file_eventbus_services_proto_rawDesc = nil
	file_eventbus_services_proto_goTypes = nil
	file_eventbus_services_proto_depIdxs = nil
}
