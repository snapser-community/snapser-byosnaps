/*
juhi-dev

Your custom SDK

API version: juhi-dev: v4 SDK
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package snapserInternal

import (
	"encoding/json"
)

// checks if the AuthUpdateEmailPasswordRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AuthUpdateEmailPasswordRequest{}

// AuthUpdateEmailPasswordRequest struct for AuthUpdateEmailPasswordRequest
type AuthUpdateEmailPasswordRequest struct {
	// Email address to update
	Email string `json:"email"`
	// New password to be set
	NewPassword string `json:"new_password"`
	// Old password to be verified. One of old_password or recovery_code is required
	OldPassword *string `json:"old_password,omitempty"`
	// Recovery code received by the user. One of old_password or recovery_code is required
	RecoveryCode *string `json:"recovery_code,omitempty"`
}

// NewAuthUpdateEmailPasswordRequest instantiates a new AuthUpdateEmailPasswordRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuthUpdateEmailPasswordRequest(email string, newPassword string) *AuthUpdateEmailPasswordRequest {
	this := AuthUpdateEmailPasswordRequest{}
	this.Email = email
	this.NewPassword = newPassword
	return &this
}

// NewAuthUpdateEmailPasswordRequestWithDefaults instantiates a new AuthUpdateEmailPasswordRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuthUpdateEmailPasswordRequestWithDefaults() *AuthUpdateEmailPasswordRequest {
	this := AuthUpdateEmailPasswordRequest{}
	return &this
}

// GetEmail returns the Email field value
func (o *AuthUpdateEmailPasswordRequest) GetEmail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Email
}

// GetEmailOk returns a tuple with the Email field value
// and a boolean to check if the value has been set.
func (o *AuthUpdateEmailPasswordRequest) GetEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Email, true
}

// SetEmail sets field value
func (o *AuthUpdateEmailPasswordRequest) SetEmail(v string) {
	o.Email = v
}

// GetNewPassword returns the NewPassword field value
func (o *AuthUpdateEmailPasswordRequest) GetNewPassword() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.NewPassword
}

// GetNewPasswordOk returns a tuple with the NewPassword field value
// and a boolean to check if the value has been set.
func (o *AuthUpdateEmailPasswordRequest) GetNewPasswordOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NewPassword, true
}

// SetNewPassword sets field value
func (o *AuthUpdateEmailPasswordRequest) SetNewPassword(v string) {
	o.NewPassword = v
}

// GetOldPassword returns the OldPassword field value if set, zero value otherwise.
func (o *AuthUpdateEmailPasswordRequest) GetOldPassword() string {
	if o == nil || IsNil(o.OldPassword) {
		var ret string
		return ret
	}
	return *o.OldPassword
}

// GetOldPasswordOk returns a tuple with the OldPassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthUpdateEmailPasswordRequest) GetOldPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.OldPassword) {
		return nil, false
	}
	return o.OldPassword, true
}

// HasOldPassword returns a boolean if a field has been set.
func (o *AuthUpdateEmailPasswordRequest) HasOldPassword() bool {
	if o != nil && !IsNil(o.OldPassword) {
		return true
	}

	return false
}

// SetOldPassword gets a reference to the given string and assigns it to the OldPassword field.
func (o *AuthUpdateEmailPasswordRequest) SetOldPassword(v string) {
	o.OldPassword = &v
}

// GetRecoveryCode returns the RecoveryCode field value if set, zero value otherwise.
func (o *AuthUpdateEmailPasswordRequest) GetRecoveryCode() string {
	if o == nil || IsNil(o.RecoveryCode) {
		var ret string
		return ret
	}
	return *o.RecoveryCode
}

// GetRecoveryCodeOk returns a tuple with the RecoveryCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthUpdateEmailPasswordRequest) GetRecoveryCodeOk() (*string, bool) {
	if o == nil || IsNil(o.RecoveryCode) {
		return nil, false
	}
	return o.RecoveryCode, true
}

// HasRecoveryCode returns a boolean if a field has been set.
func (o *AuthUpdateEmailPasswordRequest) HasRecoveryCode() bool {
	if o != nil && !IsNil(o.RecoveryCode) {
		return true
	}

	return false
}

// SetRecoveryCode gets a reference to the given string and assigns it to the RecoveryCode field.
func (o *AuthUpdateEmailPasswordRequest) SetRecoveryCode(v string) {
	o.RecoveryCode = &v
}

func (o AuthUpdateEmailPasswordRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AuthUpdateEmailPasswordRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["email"] = o.Email
	toSerialize["new_password"] = o.NewPassword
	if !IsNil(o.OldPassword) {
		toSerialize["old_password"] = o.OldPassword
	}
	if !IsNil(o.RecoveryCode) {
		toSerialize["recovery_code"] = o.RecoveryCode
	}
	return toSerialize, nil
}

type NullableAuthUpdateEmailPasswordRequest struct {
	value *AuthUpdateEmailPasswordRequest
	isSet bool
}

func (v NullableAuthUpdateEmailPasswordRequest) Get() *AuthUpdateEmailPasswordRequest {
	return v.value
}

func (v *NullableAuthUpdateEmailPasswordRequest) Set(val *AuthUpdateEmailPasswordRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAuthUpdateEmailPasswordRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAuthUpdateEmailPasswordRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuthUpdateEmailPasswordRequest(val *AuthUpdateEmailPasswordRequest) *NullableAuthUpdateEmailPasswordRequest {
	return &NullableAuthUpdateEmailPasswordRequest{value: val, isSet: true}
}

func (v NullableAuthUpdateEmailPasswordRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuthUpdateEmailPasswordRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


