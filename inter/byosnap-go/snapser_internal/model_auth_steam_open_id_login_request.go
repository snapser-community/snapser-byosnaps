/*
my-dev-cluster

Your custom SDK

API version: my-dev-cluster: v9 SDK
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package snapserInternal

import (
	"encoding/json"
)

// checks if the AuthSteamOpenIdLoginRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AuthSteamOpenIdLoginRequest{}

// AuthSteamOpenIdLoginRequest struct for AuthSteamOpenIdLoginRequest
type AuthSteamOpenIdLoginRequest struct {
	// Whether to create a user, if it does not exist
	CreateUser *bool `json:"create_user,omitempty"`
	// Key value pairs of the openid parameters
	OpenidParameters map[string]string `json:"openid_parameters"`
}

// NewAuthSteamOpenIdLoginRequest instantiates a new AuthSteamOpenIdLoginRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuthSteamOpenIdLoginRequest(openidParameters map[string]string) *AuthSteamOpenIdLoginRequest {
	this := AuthSteamOpenIdLoginRequest{}
	this.OpenidParameters = openidParameters
	return &this
}

// NewAuthSteamOpenIdLoginRequestWithDefaults instantiates a new AuthSteamOpenIdLoginRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuthSteamOpenIdLoginRequestWithDefaults() *AuthSteamOpenIdLoginRequest {
	this := AuthSteamOpenIdLoginRequest{}
	return &this
}

// GetCreateUser returns the CreateUser field value if set, zero value otherwise.
func (o *AuthSteamOpenIdLoginRequest) GetCreateUser() bool {
	if o == nil || IsNil(o.CreateUser) {
		var ret bool
		return ret
	}
	return *o.CreateUser
}

// GetCreateUserOk returns a tuple with the CreateUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthSteamOpenIdLoginRequest) GetCreateUserOk() (*bool, bool) {
	if o == nil || IsNil(o.CreateUser) {
		return nil, false
	}
	return o.CreateUser, true
}

// HasCreateUser returns a boolean if a field has been set.
func (o *AuthSteamOpenIdLoginRequest) HasCreateUser() bool {
	if o != nil && !IsNil(o.CreateUser) {
		return true
	}

	return false
}

// SetCreateUser gets a reference to the given bool and assigns it to the CreateUser field.
func (o *AuthSteamOpenIdLoginRequest) SetCreateUser(v bool) {
	o.CreateUser = &v
}

// GetOpenidParameters returns the OpenidParameters field value
func (o *AuthSteamOpenIdLoginRequest) GetOpenidParameters() map[string]string {
	if o == nil {
		var ret map[string]string
		return ret
	}

	return o.OpenidParameters
}

// GetOpenidParametersOk returns a tuple with the OpenidParameters field value
// and a boolean to check if the value has been set.
func (o *AuthSteamOpenIdLoginRequest) GetOpenidParametersOk() (*map[string]string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OpenidParameters, true
}

// SetOpenidParameters sets field value
func (o *AuthSteamOpenIdLoginRequest) SetOpenidParameters(v map[string]string) {
	o.OpenidParameters = v
}

func (o AuthSteamOpenIdLoginRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AuthSteamOpenIdLoginRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CreateUser) {
		toSerialize["create_user"] = o.CreateUser
	}
	toSerialize["openid_parameters"] = o.OpenidParameters
	return toSerialize, nil
}

type NullableAuthSteamOpenIdLoginRequest struct {
	value *AuthSteamOpenIdLoginRequest
	isSet bool
}

func (v NullableAuthSteamOpenIdLoginRequest) Get() *AuthSteamOpenIdLoginRequest {
	return v.value
}

func (v *NullableAuthSteamOpenIdLoginRequest) Set(val *AuthSteamOpenIdLoginRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAuthSteamOpenIdLoginRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAuthSteamOpenIdLoginRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuthSteamOpenIdLoginRequest(val *AuthSteamOpenIdLoginRequest) *NullableAuthSteamOpenIdLoginRequest {
	return &NullableAuthSteamOpenIdLoginRequest{value: val, isSet: true}
}

func (v NullableAuthSteamOpenIdLoginRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuthSteamOpenIdLoginRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


