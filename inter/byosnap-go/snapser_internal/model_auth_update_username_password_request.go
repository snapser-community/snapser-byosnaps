/*
my-dev-cluster

Your custom SDK

API version: my-dev-cluster: v9 SDK
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package snapserInternal

import (
	"encoding/json"
)

// checks if the AuthUpdateUsernamePasswordRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AuthUpdateUsernamePasswordRequest{}

// AuthUpdateUsernamePasswordRequest struct for AuthUpdateUsernamePasswordRequest
type AuthUpdateUsernamePasswordRequest struct {
	// New password to be set
	NewPassword string `json:"new_password"`
	// Old password to be verified
	OldPassword string `json:"old_password"`
	// User's login ID
	Username string `json:"username"`
}

// NewAuthUpdateUsernamePasswordRequest instantiates a new AuthUpdateUsernamePasswordRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuthUpdateUsernamePasswordRequest(newPassword string, oldPassword string, username string) *AuthUpdateUsernamePasswordRequest {
	this := AuthUpdateUsernamePasswordRequest{}
	this.NewPassword = newPassword
	this.OldPassword = oldPassword
	this.Username = username
	return &this
}

// NewAuthUpdateUsernamePasswordRequestWithDefaults instantiates a new AuthUpdateUsernamePasswordRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuthUpdateUsernamePasswordRequestWithDefaults() *AuthUpdateUsernamePasswordRequest {
	this := AuthUpdateUsernamePasswordRequest{}
	return &this
}

// GetNewPassword returns the NewPassword field value
func (o *AuthUpdateUsernamePasswordRequest) GetNewPassword() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.NewPassword
}

// GetNewPasswordOk returns a tuple with the NewPassword field value
// and a boolean to check if the value has been set.
func (o *AuthUpdateUsernamePasswordRequest) GetNewPasswordOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NewPassword, true
}

// SetNewPassword sets field value
func (o *AuthUpdateUsernamePasswordRequest) SetNewPassword(v string) {
	o.NewPassword = v
}

// GetOldPassword returns the OldPassword field value
func (o *AuthUpdateUsernamePasswordRequest) GetOldPassword() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OldPassword
}

// GetOldPasswordOk returns a tuple with the OldPassword field value
// and a boolean to check if the value has been set.
func (o *AuthUpdateUsernamePasswordRequest) GetOldPasswordOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OldPassword, true
}

// SetOldPassword sets field value
func (o *AuthUpdateUsernamePasswordRequest) SetOldPassword(v string) {
	o.OldPassword = v
}

// GetUsername returns the Username field value
func (o *AuthUpdateUsernamePasswordRequest) GetUsername() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Username
}

// GetUsernameOk returns a tuple with the Username field value
// and a boolean to check if the value has been set.
func (o *AuthUpdateUsernamePasswordRequest) GetUsernameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Username, true
}

// SetUsername sets field value
func (o *AuthUpdateUsernamePasswordRequest) SetUsername(v string) {
	o.Username = v
}

func (o AuthUpdateUsernamePasswordRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AuthUpdateUsernamePasswordRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["new_password"] = o.NewPassword
	toSerialize["old_password"] = o.OldPassword
	toSerialize["username"] = o.Username
	return toSerialize, nil
}

type NullableAuthUpdateUsernamePasswordRequest struct {
	value *AuthUpdateUsernamePasswordRequest
	isSet bool
}

func (v NullableAuthUpdateUsernamePasswordRequest) Get() *AuthUpdateUsernamePasswordRequest {
	return v.value
}

func (v *NullableAuthUpdateUsernamePasswordRequest) Set(val *AuthUpdateUsernamePasswordRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAuthUpdateUsernamePasswordRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAuthUpdateUsernamePasswordRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuthUpdateUsernamePasswordRequest(val *AuthUpdateUsernamePasswordRequest) *NullableAuthUpdateUsernamePasswordRequest {
	return &NullableAuthUpdateUsernamePasswordRequest{value: val, isSet: true}
}

func (v NullableAuthUpdateUsernamePasswordRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuthUpdateUsernamePasswordRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


