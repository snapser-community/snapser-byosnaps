/*
my-dev-cluster

Your custom SDK

API version: my-dev-cluster: v1 SDK
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package snapserInternal

import (
	"encoding/json"
)

// checks if the ProfilesSearchProfilesResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProfilesSearchProfilesResponse{}

// ProfilesSearchProfilesResponse struct for ProfilesSearchProfilesResponse
type ProfilesSearchProfilesResponse struct {
	// Map of user IDs to their respective profiles
	Profiles map[string]map[string]interface{} `json:"profiles,omitempty"`
}

// NewProfilesSearchProfilesResponse instantiates a new ProfilesSearchProfilesResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProfilesSearchProfilesResponse() *ProfilesSearchProfilesResponse {
	this := ProfilesSearchProfilesResponse{}
	return &this
}

// NewProfilesSearchProfilesResponseWithDefaults instantiates a new ProfilesSearchProfilesResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProfilesSearchProfilesResponseWithDefaults() *ProfilesSearchProfilesResponse {
	this := ProfilesSearchProfilesResponse{}
	return &this
}

// GetProfiles returns the Profiles field value if set, zero value otherwise.
func (o *ProfilesSearchProfilesResponse) GetProfiles() map[string]map[string]interface{} {
	if o == nil || IsNil(o.Profiles) {
		var ret map[string]map[string]interface{}
		return ret
	}
	return o.Profiles
}

// GetProfilesOk returns a tuple with the Profiles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfilesSearchProfilesResponse) GetProfilesOk() (map[string]map[string]interface{}, bool) {
	if o == nil || IsNil(o.Profiles) {
		return map[string]map[string]interface{}{}, false
	}
	return o.Profiles, true
}

// HasProfiles returns a boolean if a field has been set.
func (o *ProfilesSearchProfilesResponse) HasProfiles() bool {
	if o != nil && !IsNil(o.Profiles) {
		return true
	}

	return false
}

// SetProfiles gets a reference to the given map[string]map[string]interface{} and assigns it to the Profiles field.
func (o *ProfilesSearchProfilesResponse) SetProfiles(v map[string]map[string]interface{}) {
	o.Profiles = v
}

func (o ProfilesSearchProfilesResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProfilesSearchProfilesResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Profiles) {
		toSerialize["profiles"] = o.Profiles
	}
	return toSerialize, nil
}

type NullableProfilesSearchProfilesResponse struct {
	value *ProfilesSearchProfilesResponse
	isSet bool
}

func (v NullableProfilesSearchProfilesResponse) Get() *ProfilesSearchProfilesResponse {
	return v.value
}

func (v *NullableProfilesSearchProfilesResponse) Set(val *ProfilesSearchProfilesResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableProfilesSearchProfilesResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableProfilesSearchProfilesResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProfilesSearchProfilesResponse(val *ProfilesSearchProfilesResponse) *NullableProfilesSearchProfilesResponse {
	return &NullableProfilesSearchProfilesResponse{value: val, isSet: true}
}

func (v NullableProfilesSearchProfilesResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProfilesSearchProfilesResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


