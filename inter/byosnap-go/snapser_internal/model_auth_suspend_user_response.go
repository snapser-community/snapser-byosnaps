/*
juhi-dev

Your custom SDK

API version: juhi-dev: v4 SDK
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package snapserInternal

import (
	"encoding/json"
)

// checks if the AuthSuspendUserResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AuthSuspendUserResponse{}

// AuthSuspendUserResponse struct for AuthSuspendUserResponse
type AuthSuspendUserResponse struct {
	// Timestamp until which the user is suspended
	SuspendedUntil *int64 `json:"suspended_until,omitempty,string"`
}

// NewAuthSuspendUserResponse instantiates a new AuthSuspendUserResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuthSuspendUserResponse() *AuthSuspendUserResponse {
	this := AuthSuspendUserResponse{}
	return &this
}

// NewAuthSuspendUserResponseWithDefaults instantiates a new AuthSuspendUserResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuthSuspendUserResponseWithDefaults() *AuthSuspendUserResponse {
	this := AuthSuspendUserResponse{}
	return &this
}

// GetSuspendedUntil returns the SuspendedUntil field value if set, zero value otherwise.
func (o *AuthSuspendUserResponse) GetSuspendedUntil() int64 {
	if o == nil || IsNil(o.SuspendedUntil) {
		var ret int64
		return ret
	}
	return *o.SuspendedUntil
}

// GetSuspendedUntilOk returns a tuple with the SuspendedUntil field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthSuspendUserResponse) GetSuspendedUntilOk() (*int64, bool) {
	if o == nil || IsNil(o.SuspendedUntil) {
		return nil, false
	}
	return o.SuspendedUntil, true
}

// HasSuspendedUntil returns a boolean if a field has been set.
func (o *AuthSuspendUserResponse) HasSuspendedUntil() bool {
	if o != nil && !IsNil(o.SuspendedUntil) {
		return true
	}

	return false
}

// SetSuspendedUntil gets a reference to the given int64 and assigns it to the SuspendedUntil field.
func (o *AuthSuspendUserResponse) SetSuspendedUntil(v int64) {
	o.SuspendedUntil = &v
}

func (o AuthSuspendUserResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AuthSuspendUserResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SuspendedUntil) {
		toSerialize["suspended_until"] = o.SuspendedUntil
	}
	return toSerialize, nil
}

type NullableAuthSuspendUserResponse struct {
	value *AuthSuspendUserResponse
	isSet bool
}

func (v NullableAuthSuspendUserResponse) Get() *AuthSuspendUserResponse {
	return v.value
}

func (v *NullableAuthSuspendUserResponse) Set(val *AuthSuspendUserResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableAuthSuspendUserResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableAuthSuspendUserResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuthSuspendUserResponse(val *AuthSuspendUserResponse) *NullableAuthSuspendUserResponse {
	return &NullableAuthSuspendUserResponse{value: val, isSet: true}
}

func (v NullableAuthSuspendUserResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuthSuspendUserResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


