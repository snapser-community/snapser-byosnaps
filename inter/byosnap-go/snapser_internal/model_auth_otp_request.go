/*
my-dev-cluster

Your custom SDK

API version: my-dev-cluster: v1 SDK
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package snapserInternal

import (
	"encoding/json"
)

// checks if the AuthOtpRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AuthOtpRequest{}

// AuthOtpRequest struct for AuthOtpRequest
type AuthOtpRequest struct {
	// Email address to send OTP to
	Email string `json:"email"`
	// If set to true, OTP won't be sent if user doesn't exist
	ValidateUserExists *bool `json:"validate_user_exists,omitempty"`
}

// NewAuthOtpRequest instantiates a new AuthOtpRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuthOtpRequest(email string) *AuthOtpRequest {
	this := AuthOtpRequest{}
	this.Email = email
	return &this
}

// NewAuthOtpRequestWithDefaults instantiates a new AuthOtpRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuthOtpRequestWithDefaults() *AuthOtpRequest {
	this := AuthOtpRequest{}
	return &this
}

// GetEmail returns the Email field value
func (o *AuthOtpRequest) GetEmail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Email
}

// GetEmailOk returns a tuple with the Email field value
// and a boolean to check if the value has been set.
func (o *AuthOtpRequest) GetEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Email, true
}

// SetEmail sets field value
func (o *AuthOtpRequest) SetEmail(v string) {
	o.Email = v
}

// GetValidateUserExists returns the ValidateUserExists field value if set, zero value otherwise.
func (o *AuthOtpRequest) GetValidateUserExists() bool {
	if o == nil || IsNil(o.ValidateUserExists) {
		var ret bool
		return ret
	}
	return *o.ValidateUserExists
}

// GetValidateUserExistsOk returns a tuple with the ValidateUserExists field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthOtpRequest) GetValidateUserExistsOk() (*bool, bool) {
	if o == nil || IsNil(o.ValidateUserExists) {
		return nil, false
	}
	return o.ValidateUserExists, true
}

// HasValidateUserExists returns a boolean if a field has been set.
func (o *AuthOtpRequest) HasValidateUserExists() bool {
	if o != nil && !IsNil(o.ValidateUserExists) {
		return true
	}

	return false
}

// SetValidateUserExists gets a reference to the given bool and assigns it to the ValidateUserExists field.
func (o *AuthOtpRequest) SetValidateUserExists(v bool) {
	o.ValidateUserExists = &v
}

func (o AuthOtpRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AuthOtpRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["email"] = o.Email
	if !IsNil(o.ValidateUserExists) {
		toSerialize["validate_user_exists"] = o.ValidateUserExists
	}
	return toSerialize, nil
}

type NullableAuthOtpRequest struct {
	value *AuthOtpRequest
	isSet bool
}

func (v NullableAuthOtpRequest) Get() *AuthOtpRequest {
	return v.value
}

func (v *NullableAuthOtpRequest) Set(val *AuthOtpRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAuthOtpRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAuthOtpRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuthOtpRequest(val *AuthOtpRequest) *NullableAuthOtpRequest {
	return &NullableAuthOtpRequest{value: val, isSet: true}
}

func (v NullableAuthOtpRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuthOtpRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


