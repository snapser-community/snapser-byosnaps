/*
juhi-dev

Your custom SDK

API version: juhi-dev: v4 SDK
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package snapserInternal

import (
	"encoding/json"
)

// checks if the AuthEmailPasswordLoginResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AuthEmailPasswordLoginResponse{}

// AuthEmailPasswordLoginResponse struct for AuthEmailPasswordLoginResponse
type AuthEmailPasswordLoginResponse struct {
	// Whether email verification is required or not
	EmailVerificationRequired *bool `json:"email_verification_required,omitempty"`
	User *AuthUser `json:"user,omitempty"`
}

// NewAuthEmailPasswordLoginResponse instantiates a new AuthEmailPasswordLoginResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuthEmailPasswordLoginResponse() *AuthEmailPasswordLoginResponse {
	this := AuthEmailPasswordLoginResponse{}
	return &this
}

// NewAuthEmailPasswordLoginResponseWithDefaults instantiates a new AuthEmailPasswordLoginResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuthEmailPasswordLoginResponseWithDefaults() *AuthEmailPasswordLoginResponse {
	this := AuthEmailPasswordLoginResponse{}
	return &this
}

// GetEmailVerificationRequired returns the EmailVerificationRequired field value if set, zero value otherwise.
func (o *AuthEmailPasswordLoginResponse) GetEmailVerificationRequired() bool {
	if o == nil || IsNil(o.EmailVerificationRequired) {
		var ret bool
		return ret
	}
	return *o.EmailVerificationRequired
}

// GetEmailVerificationRequiredOk returns a tuple with the EmailVerificationRequired field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthEmailPasswordLoginResponse) GetEmailVerificationRequiredOk() (*bool, bool) {
	if o == nil || IsNil(o.EmailVerificationRequired) {
		return nil, false
	}
	return o.EmailVerificationRequired, true
}

// HasEmailVerificationRequired returns a boolean if a field has been set.
func (o *AuthEmailPasswordLoginResponse) HasEmailVerificationRequired() bool {
	if o != nil && !IsNil(o.EmailVerificationRequired) {
		return true
	}

	return false
}

// SetEmailVerificationRequired gets a reference to the given bool and assigns it to the EmailVerificationRequired field.
func (o *AuthEmailPasswordLoginResponse) SetEmailVerificationRequired(v bool) {
	o.EmailVerificationRequired = &v
}

// GetUser returns the User field value if set, zero value otherwise.
func (o *AuthEmailPasswordLoginResponse) GetUser() AuthUser {
	if o == nil || IsNil(o.User) {
		var ret AuthUser
		return ret
	}
	return *o.User
}

// GetUserOk returns a tuple with the User field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthEmailPasswordLoginResponse) GetUserOk() (*AuthUser, bool) {
	if o == nil || IsNil(o.User) {
		return nil, false
	}
	return o.User, true
}

// HasUser returns a boolean if a field has been set.
func (o *AuthEmailPasswordLoginResponse) HasUser() bool {
	if o != nil && !IsNil(o.User) {
		return true
	}

	return false
}

// SetUser gets a reference to the given AuthUser and assigns it to the User field.
func (o *AuthEmailPasswordLoginResponse) SetUser(v AuthUser) {
	o.User = &v
}

func (o AuthEmailPasswordLoginResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AuthEmailPasswordLoginResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.EmailVerificationRequired) {
		toSerialize["email_verification_required"] = o.EmailVerificationRequired
	}
	if !IsNil(o.User) {
		toSerialize["user"] = o.User
	}
	return toSerialize, nil
}

type NullableAuthEmailPasswordLoginResponse struct {
	value *AuthEmailPasswordLoginResponse
	isSet bool
}

func (v NullableAuthEmailPasswordLoginResponse) Get() *AuthEmailPasswordLoginResponse {
	return v.value
}

func (v *NullableAuthEmailPasswordLoginResponse) Set(val *AuthEmailPasswordLoginResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableAuthEmailPasswordLoginResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableAuthEmailPasswordLoginResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuthEmailPasswordLoginResponse(val *AuthEmailPasswordLoginResponse) *NullableAuthEmailPasswordLoginResponse {
	return &NullableAuthEmailPasswordLoginResponse{value: val, isSet: true}
}

func (v NullableAuthEmailPasswordLoginResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuthEmailPasswordLoginResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


