/*
my-dev-cluster

Your custom SDK

API version: my-dev-cluster: v1 SDK
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package snapserInternal

import (
	"encoding/json"
)

// checks if the AuthXboxLoginResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AuthXboxLoginResponse{}

// AuthXboxLoginResponse struct for AuthXboxLoginResponse
type AuthXboxLoginResponse struct {
	User *AuthUser `json:"user,omitempty"`
}

// NewAuthXboxLoginResponse instantiates a new AuthXboxLoginResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuthXboxLoginResponse() *AuthXboxLoginResponse {
	this := AuthXboxLoginResponse{}
	return &this
}

// NewAuthXboxLoginResponseWithDefaults instantiates a new AuthXboxLoginResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuthXboxLoginResponseWithDefaults() *AuthXboxLoginResponse {
	this := AuthXboxLoginResponse{}
	return &this
}

// GetUser returns the User field value if set, zero value otherwise.
func (o *AuthXboxLoginResponse) GetUser() AuthUser {
	if o == nil || IsNil(o.User) {
		var ret AuthUser
		return ret
	}
	return *o.User
}

// GetUserOk returns a tuple with the User field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthXboxLoginResponse) GetUserOk() (*AuthUser, bool) {
	if o == nil || IsNil(o.User) {
		return nil, false
	}
	return o.User, true
}

// HasUser returns a boolean if a field has been set.
func (o *AuthXboxLoginResponse) HasUser() bool {
	if o != nil && !IsNil(o.User) {
		return true
	}

	return false
}

// SetUser gets a reference to the given AuthUser and assigns it to the User field.
func (o *AuthXboxLoginResponse) SetUser(v AuthUser) {
	o.User = &v
}

func (o AuthXboxLoginResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AuthXboxLoginResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.User) {
		toSerialize["user"] = o.User
	}
	return toSerialize, nil
}

type NullableAuthXboxLoginResponse struct {
	value *AuthXboxLoginResponse
	isSet bool
}

func (v NullableAuthXboxLoginResponse) Get() *AuthXboxLoginResponse {
	return v.value
}

func (v *NullableAuthXboxLoginResponse) Set(val *AuthXboxLoginResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableAuthXboxLoginResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableAuthXboxLoginResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuthXboxLoginResponse(val *AuthXboxLoginResponse) *NullableAuthXboxLoginResponse {
	return &NullableAuthXboxLoginResponse{value: val, isSet: true}
}

func (v NullableAuthXboxLoginResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuthXboxLoginResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


