/*
juhi-dev

Your custom SDK

API version: juhi-dev: v4 SDK
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package snapserInternal

import (
	"encoding/json"
)

// checks if the SuspendUserRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SuspendUserRequest{}

// SuspendUserRequest struct for SuspendUserRequest
type SuspendUserRequest struct {
	// Duration in seconds for which the user should be suspended
	SuspendFor int32 `json:"suspend_for"`
}

// NewSuspendUserRequest instantiates a new SuspendUserRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSuspendUserRequest(suspendFor int32) *SuspendUserRequest {
	this := SuspendUserRequest{}
	this.SuspendFor = suspendFor
	return &this
}

// NewSuspendUserRequestWithDefaults instantiates a new SuspendUserRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSuspendUserRequestWithDefaults() *SuspendUserRequest {
	this := SuspendUserRequest{}
	return &this
}

// GetSuspendFor returns the SuspendFor field value
func (o *SuspendUserRequest) GetSuspendFor() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.SuspendFor
}

// GetSuspendForOk returns a tuple with the SuspendFor field value
// and a boolean to check if the value has been set.
func (o *SuspendUserRequest) GetSuspendForOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SuspendFor, true
}

// SetSuspendFor sets field value
func (o *SuspendUserRequest) SetSuspendFor(v int32) {
	o.SuspendFor = v
}

func (o SuspendUserRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SuspendUserRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["suspend_for"] = o.SuspendFor
	return toSerialize, nil
}

type NullableSuspendUserRequest struct {
	value *SuspendUserRequest
	isSet bool
}

func (v NullableSuspendUserRequest) Get() *SuspendUserRequest {
	return v.value
}

func (v *NullableSuspendUserRequest) Set(val *SuspendUserRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSuspendUserRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSuspendUserRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSuspendUserRequest(val *SuspendUserRequest) *NullableSuspendUserRequest {
	return &NullableSuspendUserRequest{value: val, isSet: true}
}

func (v NullableSuspendUserRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSuspendUserRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


