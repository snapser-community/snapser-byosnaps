/*
my-dev-cluster

Your custom SDK

API version: my-dev-cluster: v1 SDK
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package snapserInternal

import (
	"encoding/json"
)

// checks if the AuthGetUsernameAvailabilityResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AuthGetUsernameAvailabilityResponse{}

// AuthGetUsernameAvailabilityResponse struct for AuthGetUsernameAvailabilityResponse
type AuthGetUsernameAvailabilityResponse struct {
	// Whether the username is available or not
	Available *bool `json:"available,omitempty"`
}

// NewAuthGetUsernameAvailabilityResponse instantiates a new AuthGetUsernameAvailabilityResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuthGetUsernameAvailabilityResponse() *AuthGetUsernameAvailabilityResponse {
	this := AuthGetUsernameAvailabilityResponse{}
	return &this
}

// NewAuthGetUsernameAvailabilityResponseWithDefaults instantiates a new AuthGetUsernameAvailabilityResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuthGetUsernameAvailabilityResponseWithDefaults() *AuthGetUsernameAvailabilityResponse {
	this := AuthGetUsernameAvailabilityResponse{}
	return &this
}

// GetAvailable returns the Available field value if set, zero value otherwise.
func (o *AuthGetUsernameAvailabilityResponse) GetAvailable() bool {
	if o == nil || IsNil(o.Available) {
		var ret bool
		return ret
	}
	return *o.Available
}

// GetAvailableOk returns a tuple with the Available field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthGetUsernameAvailabilityResponse) GetAvailableOk() (*bool, bool) {
	if o == nil || IsNil(o.Available) {
		return nil, false
	}
	return o.Available, true
}

// HasAvailable returns a boolean if a field has been set.
func (o *AuthGetUsernameAvailabilityResponse) HasAvailable() bool {
	if o != nil && !IsNil(o.Available) {
		return true
	}

	return false
}

// SetAvailable gets a reference to the given bool and assigns it to the Available field.
func (o *AuthGetUsernameAvailabilityResponse) SetAvailable(v bool) {
	o.Available = &v
}

func (o AuthGetUsernameAvailabilityResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AuthGetUsernameAvailabilityResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Available) {
		toSerialize["available"] = o.Available
	}
	return toSerialize, nil
}

type NullableAuthGetUsernameAvailabilityResponse struct {
	value *AuthGetUsernameAvailabilityResponse
	isSet bool
}

func (v NullableAuthGetUsernameAvailabilityResponse) Get() *AuthGetUsernameAvailabilityResponse {
	return v.value
}

func (v *NullableAuthGetUsernameAvailabilityResponse) Set(val *AuthGetUsernameAvailabilityResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableAuthGetUsernameAvailabilityResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableAuthGetUsernameAvailabilityResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuthGetUsernameAvailabilityResponse(val *AuthGetUsernameAvailabilityResponse) *NullableAuthGetUsernameAvailabilityResponse {
	return &NullableAuthGetUsernameAvailabilityResponse{value: val, isSet: true}
}

func (v NullableAuthGetUsernameAvailabilityResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuthGetUsernameAvailabilityResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


