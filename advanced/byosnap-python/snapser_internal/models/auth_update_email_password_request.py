# coding: utf-8

"""
    game-dev

    Your custom SDK

    The version of the OpenAPI document: game-dev: v2 SDK
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json


from typing import Optional
from pydantic import BaseModel, Field, StrictStr

class AuthUpdateEmailPasswordRequest(BaseModel):
    """
    AuthUpdateEmailPasswordRequest
    """
    email: StrictStr = Field(..., description="Email address to update")
    new_password: StrictStr = Field(..., description="New password to be set")
    old_password: Optional[StrictStr] = Field(None, description="Old password to be verified. One of old_password or recovery_code is required")
    recovery_code: Optional[StrictStr] = Field(None, description="Recovery code received by the user. One of old_password or recovery_code is required")
    __properties = ["email", "new_password", "old_password", "recovery_code"]

    class Config:
        """Pydantic configuration"""
        allow_population_by_field_name = True
        validate_assignment = True

    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.dict(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> AuthUpdateEmailPasswordRequest:
        """Create an instance of AuthUpdateEmailPasswordRequest from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self):
        """Returns the dictionary representation of the model using alias"""
        _dict = self.dict(by_alias=True,
                          exclude={
                          },
                          exclude_none=True)
        return _dict

    @classmethod
    def from_dict(cls, obj: dict) -> AuthUpdateEmailPasswordRequest:
        """Create an instance of AuthUpdateEmailPasswordRequest from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return AuthUpdateEmailPasswordRequest.parse_obj(obj)

        _obj = AuthUpdateEmailPasswordRequest.parse_obj({
            "email": obj.get("email"),
            "new_password": obj.get("new_password"),
            "old_password": obj.get("old_password"),
            "recovery_code": obj.get("recovery_code")
        })
        return _obj


