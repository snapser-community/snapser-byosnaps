// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v4.23.3
// source: auth_types.proto

package proto

import (


	
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type LoginType_Type int32

const (
	LoginType_UNSPECIFIED_LOGIN_TYPE LoginType_Type = 0
	LoginType_EMAIL                  LoginType_Type = 1
	LoginType_PASSWORD               LoginType_Type = 2
	LoginType_ANON                   LoginType_Type = 3
	LoginType_FACEBOOK               LoginType_Type = 4
	LoginType_GOOGLE                 LoginType_Type = 5
	LoginType_APPLE                  LoginType_Type = 6
	LoginType_STEAM                  LoginType_Type = 7
	LoginType_XBOX                   LoginType_Type = 8
	LoginType_EPIC                   LoginType_Type = 9
)

// Enum value maps for LoginType_Type.
var (
	LoginType_Type_name = map[int32]string{
		0: "UNSPECIFIED_LOGIN_TYPE",
		1: "EMAIL",
		2: "PASSWORD",
		3: "ANON",
		4: "FACEBOOK",
		5: "GOOGLE",
		6: "APPLE",
		7: "STEAM",
		8: "XBOX",
		9: "EPIC",
	}
	LoginType_Type_value = map[string]int32{
		"UNSPECIFIED_LOGIN_TYPE": 0,
		"EMAIL":                  1,
		"PASSWORD":               2,
		"ANON":                   3,
		"FACEBOOK":               4,
		"GOOGLE":                 5,
		"APPLE":                  6,
		"STEAM":                  7,
		"XBOX":                   8,
		"EPIC":                   9,
	}
)

func (x LoginType_Type) Enum() *LoginType_Type {
	p := new(LoginType_Type)
	*p = x
	return p
}

func (x LoginType_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LoginType_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_auth_types_proto_enumTypes[0].Descriptor()
}

func (LoginType_Type) Type() protoreflect.EnumType {
	return &file_auth_types_proto_enumTypes[0]
}

func (x LoginType_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LoginType_Type.Descriptor instead.
func (LoginType_Type) EnumDescriptor() ([]byte, []int) {
	return file_auth_types_proto_rawDescGZIP(), []int{2, 0}
}

type User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatedAt            int64    `protobuf:"varint,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	SessionToken         string   `protobuf:"bytes,3,opt,name=session_token,json=sessionToken,proto3" json:"session_token,omitempty"`
	RefreshedAt          int64    `protobuf:"varint,4,opt,name=refreshed_at,json=refreshedAt,proto3" json:"refreshed_at,omitempty"`
	TokenValiditySeconds int64    `protobuf:"varint,5,opt,name=token_validity_seconds,json=tokenValiditySeconds,proto3" json:"token_validity_seconds,omitempty"`
	IsVerified           bool     `protobuf:"varint,6,opt,name=is_verified,json=isVerified,proto3" json:"is_verified,omitempty"`
	IsBanned             bool     `protobuf:"varint,7,opt,name=is_banned,json=isBanned,proto3" json:"is_banned,omitempty"`
	Tags                 []string `protobuf:"bytes,8,rep,name=tags,proto3" json:"tags,omitempty"`
	Created              bool     `protobuf:"varint,9,opt,name=created,proto3" json:"created,omitempty"`
}

func (x *User) Reset() {
	*x = User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_auth_types_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_auth_types_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_auth_types_proto_rawDescGZIP(), []int{0}
}

func (x *User) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *User) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *User) GetSessionToken() string {
	if x != nil {
		return x.SessionToken
	}
	return ""
}

func (x *User) GetRefreshedAt() int64 {
	if x != nil {
		return x.RefreshedAt
	}
	return 0
}

func (x *User) GetTokenValiditySeconds() int64 {
	if x != nil {
		return x.TokenValiditySeconds
	}
	return 0
}

func (x *User) GetIsVerified() bool {
	if x != nil {
		return x.IsVerified
	}
	return false
}

func (x *User) GetIsBanned() bool {
	if x != nil {
		return x.IsBanned
	}
	return false
}

func (x *User) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *User) GetCreated() bool {
	if x != nil {
		return x.Created
	}
	return false
}

type LoginId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type LoginType_Type `protobuf:"varint,1,opt,name=type,proto3,enum=auth.LoginType_Type" json:"type,omitempty"`
	Id   string         `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *LoginId) Reset() {
	*x = LoginId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_auth_types_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginId) ProtoMessage() {}

func (x *LoginId) ProtoReflect() protoreflect.Message {
	mi := &file_auth_types_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginId.ProtoReflect.Descriptor instead.
func (*LoginId) Descriptor() ([]byte, []int) {
	return file_auth_types_proto_rawDescGZIP(), []int{1}
}

func (x *LoginId) GetType() LoginType_Type {
	if x != nil {
		return x.Type
	}
	return LoginType_UNSPECIFIED_LOGIN_TYPE
}

func (x *LoginId) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type LoginType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *LoginType) Reset() {
	*x = LoginType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_auth_types_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginType) ProtoMessage() {}

func (x *LoginType) ProtoReflect() protoreflect.Message {
	mi := &file_auth_types_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginType.ProtoReflect.Descriptor instead.
func (*LoginType) Descriptor() ([]byte, []int) {
	return file_auth_types_proto_rawDescGZIP(), []int{2}
}

type AuthSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email                *EmailLogin    `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	Password             *PasswordLogin `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	Anon                 *AnonLogin     `protobuf:"bytes,3,opt,name=anon,proto3" json:"anon,omitempty"`
	Apple                *AppleLogin    `protobuf:"bytes,4,opt,name=apple,proto3" json:"apple,omitempty"`
	Facebook             *FacebookLogin `protobuf:"bytes,5,opt,name=facebook,proto3" json:"facebook,omitempty"`
	Google               *GoogleLogin   `protobuf:"bytes,6,opt,name=google,proto3" json:"google,omitempty"`
	Steam                *SteamLogin    `protobuf:"bytes,8,opt,name=steam,proto3" json:"steam,omitempty"`
	Xbox                 *XboxLogin     `protobuf:"bytes,9,opt,name=xbox,proto3" json:"xbox,omitempty"`
	Epic                 *EpicLogin     `protobuf:"bytes,10,opt,name=epic,proto3" json:"epic,omitempty"`
	SessionTokenValidity int32          `protobuf:"varint,7,opt,name=session_token_validity,json=sessionTokenValidity,proto3" json:"session_token_validity,omitempty"`
}

func (x *AuthSettings) Reset() {
	*x = AuthSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_auth_types_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthSettings) ProtoMessage() {}

func (x *AuthSettings) ProtoReflect() protoreflect.Message {
	mi := &file_auth_types_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthSettings.ProtoReflect.Descriptor instead.
func (*AuthSettings) Descriptor() ([]byte, []int) {
	return file_auth_types_proto_rawDescGZIP(), []int{3}
}

func (x *AuthSettings) GetEmail() *EmailLogin {
	if x != nil {
		return x.Email
	}
	return nil
}

func (x *AuthSettings) GetPassword() *PasswordLogin {
	if x != nil {
		return x.Password
	}
	return nil
}

func (x *AuthSettings) GetAnon() *AnonLogin {
	if x != nil {
		return x.Anon
	}
	return nil
}

func (x *AuthSettings) GetApple() *AppleLogin {
	if x != nil {
		return x.Apple
	}
	return nil
}

func (x *AuthSettings) GetFacebook() *FacebookLogin {
	if x != nil {
		return x.Facebook
	}
	return nil
}

func (x *AuthSettings) GetGoogle() *GoogleLogin {
	if x != nil {
		return x.Google
	}
	return nil
}

func (x *AuthSettings) GetSteam() *SteamLogin {
	if x != nil {
		return x.Steam
	}
	return nil
}

func (x *AuthSettings) GetXbox() *XboxLogin {
	if x != nil {
		return x.Xbox
	}
	return nil
}

func (x *AuthSettings) GetEpic() *EpicLogin {
	if x != nil {
		return x.Epic
	}
	return nil
}

func (x *AuthSettings) GetSessionTokenValidity() int32 {
	if x != nil {
		return x.SessionTokenValidity
	}
	return 0
}

type EmailLogin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enabled              bool                      `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	OtpLength            uint32                    `protobuf:"varint,2,opt,name=otp_length,json=otpLength,proto3" json:"otp_length,omitempty"`
	OtpValidity          uint32                    `protobuf:"varint,3,opt,name=otp_validity,json=otpValidity,proto3" json:"otp_validity,omitempty"`
	OtpRateLimitSettings *FixedRateLimiterSettings `protobuf:"bytes,4,opt,name=otp_rate_limit_settings,json=otpRateLimitSettings,proto3" json:"otp_rate_limit_settings,omitempty"`
}

func (x *EmailLogin) Reset() {
	*x = EmailLogin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_auth_types_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmailLogin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmailLogin) ProtoMessage() {}

func (x *EmailLogin) ProtoReflect() protoreflect.Message {
	mi := &file_auth_types_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmailLogin.ProtoReflect.Descriptor instead.
func (*EmailLogin) Descriptor() ([]byte, []int) {
	return file_auth_types_proto_rawDescGZIP(), []int{4}
}

func (x *EmailLogin) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *EmailLogin) GetOtpLength() uint32 {
	if x != nil {
		return x.OtpLength
	}
	return 0
}

func (x *EmailLogin) GetOtpValidity() uint32 {
	if x != nil {
		return x.OtpValidity
	}
	return 0
}

func (x *EmailLogin) GetOtpRateLimitSettings() *FixedRateLimiterSettings {
	if x != nil {
		return x.OtpRateLimitSettings
	}
	return nil
}

type PasswordLogin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enabled bool `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
}

func (x *PasswordLogin) Reset() {
	*x = PasswordLogin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_auth_types_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PasswordLogin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PasswordLogin) ProtoMessage() {}

func (x *PasswordLogin) ProtoReflect() protoreflect.Message {
	mi := &file_auth_types_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PasswordLogin.ProtoReflect.Descriptor instead.
func (*PasswordLogin) Descriptor() ([]byte, []int) {
	return file_auth_types_proto_rawDescGZIP(), []int{5}
}

func (x *PasswordLogin) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

type AnonLogin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enabled bool `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
}

func (x *AnonLogin) Reset() {
	*x = AnonLogin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_auth_types_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AnonLogin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnonLogin) ProtoMessage() {}

func (x *AnonLogin) ProtoReflect() protoreflect.Message {
	mi := &file_auth_types_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnonLogin.ProtoReflect.Descriptor instead.
func (*AnonLogin) Descriptor() ([]byte, []int) {
	return file_auth_types_proto_rawDescGZIP(), []int{6}
}

func (x *AnonLogin) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

type AppleLogin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enabled    bool   `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	ServiceId  string `protobuf:"bytes,2,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	TeamId     string `protobuf:"bytes,3,opt,name=team_id,json=teamId,proto3" json:"team_id,omitempty"`
	KeyId      string `protobuf:"bytes,4,opt,name=key_id,json=keyId,proto3" json:"key_id,omitempty"`
	PrivateKey string `protobuf:"bytes,5,opt,name=private_key,json=privateKey,proto3" json:"private_key,omitempty"`
}

func (x *AppleLogin) Reset() {
	*x = AppleLogin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_auth_types_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppleLogin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppleLogin) ProtoMessage() {}

func (x *AppleLogin) ProtoReflect() protoreflect.Message {
	mi := &file_auth_types_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppleLogin.ProtoReflect.Descriptor instead.
func (*AppleLogin) Descriptor() ([]byte, []int) {
	return file_auth_types_proto_rawDescGZIP(), []int{7}
}

func (x *AppleLogin) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *AppleLogin) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

func (x *AppleLogin) GetTeamId() string {
	if x != nil {
		return x.TeamId
	}
	return ""
}

func (x *AppleLogin) GetKeyId() string {
	if x != nil {
		return x.KeyId
	}
	return ""
}

func (x *AppleLogin) GetPrivateKey() string {
	if x != nil {
		return x.PrivateKey
	}
	return ""
}

type FacebookLogin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enabled      bool   `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	ClientId     string `protobuf:"bytes,2,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	ClientSecret string `protobuf:"bytes,3,opt,name=client_secret,json=clientSecret,proto3" json:"client_secret,omitempty"`
}

func (x *FacebookLogin) Reset() {
	*x = FacebookLogin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_auth_types_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FacebookLogin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FacebookLogin) ProtoMessage() {}

func (x *FacebookLogin) ProtoReflect() protoreflect.Message {
	mi := &file_auth_types_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FacebookLogin.ProtoReflect.Descriptor instead.
func (*FacebookLogin) Descriptor() ([]byte, []int) {
	return file_auth_types_proto_rawDescGZIP(), []int{8}
}

func (x *FacebookLogin) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *FacebookLogin) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *FacebookLogin) GetClientSecret() string {
	if x != nil {
		return x.ClientSecret
	}
	return ""
}

type GoogleLogin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enabled      bool   `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	ClientId     string `protobuf:"bytes,2,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	ClientSecret string `protobuf:"bytes,3,opt,name=client_secret,json=clientSecret,proto3" json:"client_secret,omitempty"`
}

func (x *GoogleLogin) Reset() {
	*x = GoogleLogin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_auth_types_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleLogin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleLogin) ProtoMessage() {}

func (x *GoogleLogin) ProtoReflect() protoreflect.Message {
	mi := &file_auth_types_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleLogin.ProtoReflect.Descriptor instead.
func (*GoogleLogin) Descriptor() ([]byte, []int) {
	return file_auth_types_proto_rawDescGZIP(), []int{9}
}

func (x *GoogleLogin) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *GoogleLogin) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *GoogleLogin) GetClientSecret() string {
	if x != nil {
		return x.ClientSecret
	}
	return ""
}

type SteamLogin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enabled bool   `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	ApiKey  string `protobuf:"bytes,2,opt,name=api_key,json=apiKey,proto3" json:"api_key,omitempty"`
}

func (x *SteamLogin) Reset() {
	*x = SteamLogin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_auth_types_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SteamLogin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SteamLogin) ProtoMessage() {}

func (x *SteamLogin) ProtoReflect() protoreflect.Message {
	mi := &file_auth_types_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SteamLogin.ProtoReflect.Descriptor instead.
func (*SteamLogin) Descriptor() ([]byte, []int) {
	return file_auth_types_proto_rawDescGZIP(), []int{10}
}

func (x *SteamLogin) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *SteamLogin) GetApiKey() string {
	if x != nil {
		return x.ApiKey
	}
	return ""
}

type XboxLogin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enabled      bool   `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	ClientId     string `protobuf:"bytes,2,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	ClientSecret string `protobuf:"bytes,3,opt,name=client_secret,json=clientSecret,proto3" json:"client_secret,omitempty"`
}

func (x *XboxLogin) Reset() {
	*x = XboxLogin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_auth_types_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XboxLogin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XboxLogin) ProtoMessage() {}

func (x *XboxLogin) ProtoReflect() protoreflect.Message {
	mi := &file_auth_types_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XboxLogin.ProtoReflect.Descriptor instead.
func (*XboxLogin) Descriptor() ([]byte, []int) {
	return file_auth_types_proto_rawDescGZIP(), []int{11}
}

func (x *XboxLogin) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *XboxLogin) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *XboxLogin) GetClientSecret() string {
	if x != nil {
		return x.ClientSecret
	}
	return ""
}

type EpicLogin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enabled      bool   `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	ClientId     string `protobuf:"bytes,2,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	ClientSecret string `protobuf:"bytes,3,opt,name=client_secret,json=clientSecret,proto3" json:"client_secret,omitempty"`
}

func (x *EpicLogin) Reset() {
	*x = EpicLogin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_auth_types_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EpicLogin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EpicLogin) ProtoMessage() {}

func (x *EpicLogin) ProtoReflect() protoreflect.Message {
	mi := &file_auth_types_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EpicLogin.ProtoReflect.Descriptor instead.
func (*EpicLogin) Descriptor() ([]byte, []int) {
	return file_auth_types_proto_rawDescGZIP(), []int{12}
}

func (x *EpicLogin) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *EpicLogin) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *EpicLogin) GetClientSecret() string {
	if x != nil {
		return x.ClientSecret
	}
	return ""
}

type FixedRateLimiterSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit                    uint32   `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	DurationInSeconds        uint32   `protobuf:"varint,2,opt,name=duration_in_seconds,json=durationInSeconds,proto3" json:"duration_in_seconds,omitempty"`
	LockoutDurationInSeconds uint32   `protobuf:"varint,3,opt,name=lockout_duration_in_seconds,json=lockoutDurationInSeconds,proto3" json:"lockout_duration_in_seconds,omitempty"`
	AllowList                []string `protobuf:"bytes,4,rep,name=allow_list,json=allowList,proto3" json:"allow_list,omitempty"`
	DenyList                 []string `protobuf:"bytes,5,rep,name=deny_list,json=denyList,proto3" json:"deny_list,omitempty"`
}

func (x *FixedRateLimiterSettings) Reset() {
	*x = FixedRateLimiterSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_auth_types_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FixedRateLimiterSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FixedRateLimiterSettings) ProtoMessage() {}

func (x *FixedRateLimiterSettings) ProtoReflect() protoreflect.Message {
	mi := &file_auth_types_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FixedRateLimiterSettings.ProtoReflect.Descriptor instead.
func (*FixedRateLimiterSettings) Descriptor() ([]byte, []int) {
	return file_auth_types_proto_rawDescGZIP(), []int{13}
}

func (x *FixedRateLimiterSettings) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *FixedRateLimiterSettings) GetDurationInSeconds() uint32 {
	if x != nil {
		return x.DurationInSeconds
	}
	return 0
}

func (x *FixedRateLimiterSettings) GetLockoutDurationInSeconds() uint32 {
	if x != nil {
		return x.LockoutDurationInSeconds
	}
	return 0
}

func (x *FixedRateLimiterSettings) GetAllowList() []string {
	if x != nil {
		return x.AllowList
	}
	return nil
}

func (x *FixedRateLimiterSettings) GetDenyList() []string {
	if x != nil {
		return x.DenyList
	}
	return nil
}

var File_auth_types_proto protoreflect.FileDescriptor

var file_auth_types_proto_rawDesc = []byte{
	0x0a, 0x10, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x04, 0x61, 0x75, 0x74, 0x68, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x62, 0x65, 0x68, 0x61, 0x76,
	0x69, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x6f,
	0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x32, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0xff, 0x05, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x12, 0x2d, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1d, 0x92, 0x41, 0x1a, 0x32, 0x14, 0x55, 0x73,
	0x65, 0x72, 0x20, 0x49, 0x44, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x74, 0x68, 0x65, 0x20, 0x75, 0x73,
	0x65, 0x72, 0x9a, 0x02, 0x01, 0x07, 0x52, 0x02, 0x69, 0x64, 0x12, 0x53, 0x0a, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x42, 0x34,
	0x92, 0x41, 0x31, 0x32, 0x2b, 0x55, 0x6e, 0x69, 0x78, 0x20, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x20, 0x6f, 0x66, 0x20, 0x77, 0x68, 0x65, 0x6e, 0x20, 0x74, 0x68, 0x65, 0x20,
	0x75, 0x73, 0x65, 0x72, 0x20, 0x77, 0x61, 0x73, 0x20, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x9a, 0x02, 0x01, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x57, 0x0a, 0x0d, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x32, 0x92, 0x41, 0x2f, 0x32, 0x29, 0x53, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x20, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68,
	0x65, 0x20, 0x75, 0x73, 0x65, 0x72, 0x20, 0x28, 0x49, 0x66, 0x20, 0x61, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x62, 0x6c, 0x65, 0x29, 0x9a, 0x02, 0x01, 0x07, 0x52, 0x0c, 0x73, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x71, 0x0a, 0x0c, 0x72, 0x65, 0x66, 0x72,
	0x65, 0x73, 0x68, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x42, 0x4e,
	0x92, 0x41, 0x4b, 0x32, 0x45, 0x55, 0x6e, 0x69, 0x78, 0x20, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x20, 0x6f, 0x66, 0x20, 0x77, 0x68, 0x65, 0x6e, 0x20, 0x74, 0x68, 0x65, 0x20,
	0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x77, 0x61, 0x73, 0x20, 0x6c, 0x61, 0x73, 0x74,
	0x20, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x65, 0x64, 0x20, 0x28, 0x49, 0x66, 0x20, 0x61,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x62, 0x6c, 0x65, 0x29, 0x9a, 0x02, 0x01, 0x03, 0x52, 0x0b,
	0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x65, 0x64, 0x41, 0x74, 0x12, 0x6f, 0x0a, 0x16, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x69, 0x74, 0x79, 0x5f, 0x73, 0x65,
	0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x42, 0x39, 0x92, 0x41, 0x36,
	0x32, 0x30, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x69, 0x74, 0x79, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68,
	0x65, 0x20, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x20, 0x69, 0x6e, 0x20, 0x73, 0x65, 0x63, 0x6f, 0x6e,
	0x64, 0x73, 0x20, 0x28, 0x49, 0x66, 0x20, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x62, 0x6c,
	0x65, 0x29, 0x9a, 0x02, 0x01, 0x03, 0x52, 0x14, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x56, 0x61, 0x6c,
	0x69, 0x64, 0x69, 0x74, 0x79, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x49, 0x0a, 0x0b,
	0x69, 0x73, 0x5f, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x08, 0x42, 0x28, 0x92, 0x41, 0x25, 0x32, 0x1f, 0x57, 0x68, 0x65, 0x74, 0x68, 0x65, 0x72, 0x20,
	0x75, 0x73, 0x65, 0x72, 0x20, 0x69, 0x73, 0x20, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64,
	0x20, 0x6f, 0x72, 0x20, 0x6e, 0x6f, 0x74, 0x9a, 0x02, 0x01, 0x02, 0x52, 0x0a, 0x69, 0x73, 0x56,
	0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x12, 0x43, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x62, 0x61,
	0x6e, 0x6e, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x42, 0x26, 0x92, 0x41, 0x23, 0x32,
	0x1d, 0x57, 0x68, 0x65, 0x74, 0x68, 0x65, 0x72, 0x20, 0x75, 0x73, 0x65, 0x72, 0x20, 0x69, 0x73,
	0x20, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x20, 0x6f, 0x72, 0x20, 0x6e, 0x6f, 0x74, 0x9a, 0x02,
	0x01, 0x02, 0x52, 0x08, 0x69, 0x73, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x12, 0x62, 0x0a, 0x04,
	0x74, 0x61, 0x67, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09, 0x42, 0x4e, 0xfa, 0x42, 0x12, 0x92,
	0x01, 0x0f, 0x18, 0x01, 0x22, 0x0b, 0x72, 0x09, 0x52, 0x07, 0x66, 0x6c, 0x61, 0x67, 0x67, 0x65,
	0x64, 0x92, 0x41, 0x36, 0x32, 0x30, 0x44, 0x69, 0x66, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x74, 0x20,
	0x74, 0x61, 0x67, 0x73, 0x20, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x65, 0x64, 0x20, 0x74, 0x6f,
	0x20, 0x74, 0x68, 0x65, 0x20, 0x75, 0x73, 0x65, 0x72, 0x20, 0x6c, 0x69, 0x6b, 0x65, 0x20, 0x66,
	0x6c, 0x61, 0x67, 0x67, 0x65, 0x64, 0x9a, 0x02, 0x01, 0x01, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73,
	0x12, 0x42, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x08, 0x42, 0x28, 0x92, 0x41, 0x25, 0x32, 0x1f, 0x57, 0x68, 0x65, 0x74, 0x68, 0x65, 0x72, 0x20,
	0x75, 0x73, 0x65, 0x72, 0x20, 0x77, 0x61, 0x73, 0x20, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x20, 0x6f, 0x72, 0x20, 0x6e, 0x6f, 0x74, 0x9a, 0x02, 0x01, 0x02, 0x52, 0x07, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x22, 0x43, 0x0a, 0x07, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x49, 0x64, 0x12,
	0x28, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e,
	0x61, 0x75, 0x74, 0x68, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x97, 0x01, 0x0a, 0x09, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x22, 0x89, 0x01, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x1a, 0x0a, 0x16, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x5f,
	0x4c, 0x4f, 0x47, 0x49, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05,
	0x45, 0x4d, 0x41, 0x49, 0x4c, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x50, 0x41, 0x53, 0x53, 0x57,
	0x4f, 0x52, 0x44, 0x10, 0x02, 0x12, 0x08, 0x0a, 0x04, 0x41, 0x4e, 0x4f, 0x4e, 0x10, 0x03, 0x12,
	0x0c, 0x0a, 0x08, 0x46, 0x41, 0x43, 0x45, 0x42, 0x4f, 0x4f, 0x4b, 0x10, 0x04, 0x12, 0x0a, 0x0a,
	0x06, 0x47, 0x4f, 0x4f, 0x47, 0x4c, 0x45, 0x10, 0x05, 0x12, 0x09, 0x0a, 0x05, 0x41, 0x50, 0x50,
	0x4c, 0x45, 0x10, 0x06, 0x12, 0x09, 0x0a, 0x05, 0x53, 0x54, 0x45, 0x41, 0x4d, 0x10, 0x07, 0x12,
	0x08, 0x0a, 0x04, 0x58, 0x42, 0x4f, 0x58, 0x10, 0x08, 0x12, 0x08, 0x0a, 0x04, 0x45, 0x50, 0x49,
	0x43, 0x10, 0x09, 0x22, 0xc1, 0x03, 0x0a, 0x0c, 0x41, 0x75, 0x74, 0x68, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x12, 0x26, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x45, 0x6d, 0x61, 0x69, 0x6c,
	0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x2f, 0x0a, 0x08,
	0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x23, 0x0a,
	0x04, 0x61, 0x6e, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x61, 0x75,
	0x74, 0x68, 0x2e, 0x41, 0x6e, 0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x04, 0x61, 0x6e,
	0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x65, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x52, 0x05, 0x61, 0x70, 0x70, 0x6c, 0x65, 0x12, 0x2f, 0x0a, 0x08, 0x66, 0x61,
	0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x61,
	0x75, 0x74, 0x68, 0x2e, 0x46, 0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x4c, 0x6f, 0x67, 0x69,
	0x6e, 0x52, 0x08, 0x66, 0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x12, 0x29, 0x0a, 0x06, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x61, 0x75,
	0x74, 0x68, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x06,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x12, 0x26, 0x0a, 0x05, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x53, 0x74, 0x65,
	0x61, 0x6d, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x05, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x12, 0x23,
	0x0a, 0x04, 0x78, 0x62, 0x6f, 0x78, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x61,
	0x75, 0x74, 0x68, 0x2e, 0x58, 0x62, 0x6f, 0x78, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x04, 0x78,
	0x62, 0x6f, 0x78, 0x12, 0x23, 0x0a, 0x04, 0x65, 0x70, 0x69, 0x63, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x45, 0x70, 0x69, 0x63, 0x4c, 0x6f, 0x67,
	0x69, 0x6e, 0x52, 0x04, 0x65, 0x70, 0x69, 0x63, 0x12, 0x3d, 0x0a, 0x16, 0x73, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x69,
	0x74, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x28,
	0x00, 0x52, 0x14, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x56,
	0x61, 0x6c, 0x69, 0x64, 0x69, 0x74, 0x79, 0x22, 0xd1, 0x01, 0x0a, 0x0a, 0x45, 0x6d, 0x61, 0x69,
	0x6c, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x12, 0x26, 0x0a, 0x0a, 0x6f, 0x74, 0x70, 0x5f, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x2a, 0x02, 0x20, 0x04, 0x52, 0x09, 0x6f,
	0x74, 0x70, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x2a, 0x0a, 0x0c, 0x6f, 0x74, 0x70, 0x5f,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x07,
	0xfa, 0x42, 0x04, 0x2a, 0x02, 0x20, 0x00, 0x52, 0x0b, 0x6f, 0x74, 0x70, 0x56, 0x61, 0x6c, 0x69,
	0x64, 0x69, 0x74, 0x79, 0x12, 0x55, 0x0a, 0x17, 0x6f, 0x74, 0x70, 0x5f, 0x72, 0x61, 0x74, 0x65,
	0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x46, 0x69, 0x78,
	0x65, 0x64, 0x52, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x72, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x14, 0x6f, 0x74, 0x70, 0x52, 0x61, 0x74, 0x65, 0x4c, 0x69,
	0x6d, 0x69, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x22, 0x29, 0x0a, 0x0d, 0x50,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x18, 0x0a, 0x07,
	0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x22, 0x25, 0x0a, 0x09, 0x41, 0x6e, 0x6f, 0x6e, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x22, 0x96, 0x01,
	0x0a, 0x0a, 0x41, 0x70, 0x70, 0x6c, 0x65, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x18, 0x0a, 0x07,
	0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x15,
	0x0a, 0x06, 0x6b, 0x65, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x6b, 0x65, 0x79, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65,
	0x5f, 0x6b, 0x65, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x69, 0x76,
	0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x22, 0x6b, 0x0a, 0x0d, 0x46, 0x61, 0x63, 0x65, 0x62, 0x6f,
	0x6f, 0x6b, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x64, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x23,
	0x0a, 0x0d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x63,
	0x72, 0x65, 0x74, 0x22, 0x69, 0x0a, 0x0b, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x4c, 0x6f, 0x67,
	0x69, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x1b, 0x0a, 0x09,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x22, 0x3f,
	0x0a, 0x0a, 0x53, 0x74, 0x65, 0x61, 0x6d, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x18, 0x0a, 0x07,
	0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x70, 0x69, 0x5f, 0x6b, 0x65,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x22,
	0x67, 0x0a, 0x09, 0x58, 0x62, 0x6f, 0x78, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x18, 0x0a, 0x07,
	0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65,
	0x63, 0x72, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x22, 0x67, 0x0a, 0x09, 0x45, 0x70, 0x69, 0x63,
	0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12,
	0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x63, 0x72, 0x65,
	0x74, 0x22, 0xf6, 0x03, 0x0a, 0x18, 0x46, 0x69, 0x78, 0x65, 0x64, 0x52, 0x61, 0x74, 0x65, 0x4c,
	0x69, 0x6d, 0x69, 0x74, 0x65, 0x72, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x5a,
	0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x44, 0xfa,
	0x42, 0x04, 0x2a, 0x02, 0x20, 0x00, 0xe0, 0x41, 0x02, 0x92, 0x41, 0x37, 0x32, 0x31, 0x61, 0x6c,
	0x6c, 0x6f, 0x77, 0x65, 0x64, 0x20, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x20, 0x6f, 0x66, 0x20,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x20, 0x69, 0x6e, 0x20, 0x61, 0x20, 0x70, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x64, 0x20, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x9a,
	0x02, 0x01, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x56, 0x0a, 0x13, 0x64, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x26, 0xfa, 0x42, 0x04, 0x2a, 0x02, 0x20, 0x00,
	0xe0, 0x41, 0x02, 0x92, 0x41, 0x19, 0x32, 0x13, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x20, 0x69, 0x6e, 0x20, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x9a, 0x02, 0x01, 0x03, 0x52,
	0x11, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x53, 0x65, 0x63, 0x6f, 0x6e,
	0x64, 0x73, 0x12, 0x84, 0x01, 0x0a, 0x1b, 0x6c, 0x6f, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x5f, 0x64,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e,
	0x64, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x45, 0xfa, 0x42, 0x04, 0x2a, 0x02, 0x20,
	0x00, 0xe0, 0x41, 0x02, 0x92, 0x41, 0x38, 0x32, 0x32, 0x6c, 0x6f, 0x63, 0x6b, 0x6f, 0x75, 0x74,
	0x20, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x69, 0x6e, 0x20, 0x73, 0x65, 0x63,
	0x6f, 0x6e, 0x64, 0x73, 0x20, 0x69, 0x66, 0x20, 0x72, 0x61, 0x74, 0x65, 0x20, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x20, 0x65, 0x78, 0x63, 0x65, 0x65, 0x64, 0x65, 0x64, 0x9a, 0x02, 0x01, 0x03, 0x52,
	0x18, 0x6c, 0x6f, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x6e, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x4d, 0x0a, 0x0a, 0x61, 0x6c, 0x6c,
	0x6f, 0x77, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x42, 0x2e, 0xe0,
	0x41, 0x01, 0x92, 0x41, 0x28, 0x32, 0x22, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x20, 0x6c, 0x69, 0x73,
	0x74, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x62, 0x79, 0x70, 0x61, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x20,
	0x72, 0x61, 0x74, 0x65, 0x20, 0x6c, 0x69, 0x6d, 0x74, 0x9a, 0x02, 0x01, 0x01, 0x52, 0x09, 0x61,
	0x6c, 0x6c, 0x6f, 0x77, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x50, 0x0a, 0x09, 0x64, 0x65, 0x6e, 0x79,
	0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x42, 0x33, 0xe0, 0x41, 0x01,
	0x92, 0x41, 0x2d, 0x32, 0x27, 0x64, 0x65, 0x6e, 0x79, 0x20, 0x6c, 0x69, 0x73, 0x74, 0x20, 0x66,
	0x6f, 0x72, 0x20, 0x61, 0x6c, 0x77, 0x61, 0x79, 0x73, 0x20, 0x64, 0x65, 0x6e, 0x79, 0x69, 0x6e,
	0x67, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x61, 0x6e, 0x20, 0x6f, 0x74, 0x70, 0x9a, 0x02, 0x01, 0x01,
	0x52, 0x08, 0x64, 0x65, 0x6e, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x2f, 0x5a, 0x2d, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x65, 0x72,
	0x2d, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2f, 0x61, 0x75, 0x74, 0x68, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_auth_types_proto_rawDescOnce sync.Once
	file_auth_types_proto_rawDescData = file_auth_types_proto_rawDesc
)

func file_auth_types_proto_rawDescGZIP() []byte {
	file_auth_types_proto_rawDescOnce.Do(func() {
		file_auth_types_proto_rawDescData = protoimpl.X.CompressGZIP(file_auth_types_proto_rawDescData)
	})
	return file_auth_types_proto_rawDescData
}

var file_auth_types_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_auth_types_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_auth_types_proto_goTypes = []interface{}{
	(LoginType_Type)(0),              // 0: auth.LoginType.Type
	(*User)(nil),                     // 1: auth.User
	(*LoginId)(nil),                  // 2: auth.LoginId
	(*LoginType)(nil),                // 3: auth.LoginType
	(*AuthSettings)(nil),             // 4: auth.AuthSettings
	(*EmailLogin)(nil),               // 5: auth.EmailLogin
	(*PasswordLogin)(nil),            // 6: auth.PasswordLogin
	(*AnonLogin)(nil),                // 7: auth.AnonLogin
	(*AppleLogin)(nil),               // 8: auth.AppleLogin
	(*FacebookLogin)(nil),            // 9: auth.FacebookLogin
	(*GoogleLogin)(nil),              // 10: auth.GoogleLogin
	(*SteamLogin)(nil),               // 11: auth.SteamLogin
	(*XboxLogin)(nil),                // 12: auth.XboxLogin
	(*EpicLogin)(nil),                // 13: auth.EpicLogin
	(*FixedRateLimiterSettings)(nil), // 14: auth.FixedRateLimiterSettings
}
var file_auth_types_proto_depIdxs = []int32{
	0,  // 0: auth.LoginId.type:type_name -> auth.LoginType.Type
	5,  // 1: auth.AuthSettings.email:type_name -> auth.EmailLogin
	6,  // 2: auth.AuthSettings.password:type_name -> auth.PasswordLogin
	7,  // 3: auth.AuthSettings.anon:type_name -> auth.AnonLogin
	8,  // 4: auth.AuthSettings.apple:type_name -> auth.AppleLogin
	9,  // 5: auth.AuthSettings.facebook:type_name -> auth.FacebookLogin
	10, // 6: auth.AuthSettings.google:type_name -> auth.GoogleLogin
	11, // 7: auth.AuthSettings.steam:type_name -> auth.SteamLogin
	12, // 8: auth.AuthSettings.xbox:type_name -> auth.XboxLogin
	13, // 9: auth.AuthSettings.epic:type_name -> auth.EpicLogin
	14, // 10: auth.EmailLogin.otp_rate_limit_settings:type_name -> auth.FixedRateLimiterSettings
	11, // [11:11] is the sub-list for method output_type
	11, // [11:11] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_auth_types_proto_init() }
func file_auth_types_proto_init() {
	if File_auth_types_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_auth_types_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_auth_types_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_auth_types_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_auth_types_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_auth_types_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmailLogin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_auth_types_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PasswordLogin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_auth_types_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AnonLogin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_auth_types_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppleLogin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_auth_types_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FacebookLogin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_auth_types_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleLogin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_auth_types_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SteamLogin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_auth_types_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XboxLogin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_auth_types_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EpicLogin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_auth_types_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FixedRateLimiterSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_auth_types_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_auth_types_proto_goTypes,
		DependencyIndexes: file_auth_types_proto_depIdxs,
		EnumInfos:         file_auth_types_proto_enumTypes,
		MessageInfos:      file_auth_types_proto_msgTypes,
	}.Build()
	File_auth_types_proto = out.File
	file_auth_types_proto_rawDesc = nil
	file_auth_types_proto_goTypes = nil
	file_auth_types_proto_depIdxs = nil
}
